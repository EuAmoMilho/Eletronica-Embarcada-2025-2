

Microchip MPLAB XC8 Assembler V3.10 build 20250813170317 
                                                                                               Mon Oct 13 08:48:56 2025

Microchip MPLAB XC8 C Compiler v3.10 (Free license) build 20250813170317 Og1 
     1                           	processor	16F1827
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,space=0,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2
    23                           	psect	intentry,global,class=CODE,space=0,delta=2
    24                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,space=0,merge=1,delta=2
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    29                           	dabs	1,0x7E,2
    30     0000                     
    31                           ; Generated 07/09/2023 GMT
    32                           ; 
    33                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution. Publication is not required when
    47                           ;        this file is used in an embedded application.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC16F1827 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65     0008                     bsr             equ	8
    66     0005                     fsr0h           equ	5
    67     0004                     fsr0l           equ	4
    68     0007                     fsr1h           equ	7
    69     0006                     fsr1l           equ	6
    70     0000                     indf            equ	0
    71     0000                     indf0           equ	0
    72     0001                     indf1           equ	1
    73     000B                     intcon          equ	11
    74     0002                     pc              equ	2
    75     0002                     pcl             equ	2
    76     000A                     pclath          equ	10
    77     0003                     status          equ	3
    78     0009                     wreg            equ	9
    79     0000                     INDF0           equ	0	;# 
    80     0001                     INDF1           equ	1	;# 
    81     0002                     PCL             equ	2	;# 
    82     0003                     STATUS          equ	3	;# 
    83     0004                     FSR0L           equ	4	;# 
    84     0005                     FSR0H           equ	5	;# 
    85     0006                     FSR1L           equ	6	;# 
    86     0007                     FSR1H           equ	7	;# 
    87     0008                     BSR             equ	8	;# 
    88     0009                     WREG            equ	9	;# 
    89     000A                     PCLATH          equ	10	;# 
    90     000B                     INTCON          equ	11	;# 
    91     000C                     PORTA           equ	12	;# 
    92     000D                     PORTB           equ	13	;# 
    93     0011                     PIR1            equ	17	;# 
    94     0012                     PIR2            equ	18	;# 
    95     0013                     PIR3            equ	19	;# 
    96     0014                     PIR4            equ	20	;# 
    97     0015                     TMR0            equ	21	;# 
    98     0016                     TMR1            equ	22	;# 
    99     0016                     TMR1L           equ	22	;# 
   100     0017                     TMR1H           equ	23	;# 
   101     0018                     T1CON           equ	24	;# 
   102     0019                     T1GCON          equ	25	;# 
   103     001A                     TMR2            equ	26	;# 
   104     001B                     PR2             equ	27	;# 
   105     001C                     T2CON           equ	28	;# 
   106     001E                     CPSCON0         equ	30	;# 
   107     001F                     CPSCON1         equ	31	;# 
   108     008C                     TRISA           equ	140	;# 
   109     008D                     TRISB           equ	141	;# 
   110     0091                     PIE1            equ	145	;# 
   111     0092                     PIE2            equ	146	;# 
   112     0093                     PIE3            equ	147	;# 
   113     0094                     PIE4            equ	148	;# 
   114     0095                     OPTION_REG      equ	149	;# 
   115     0096                     PCON            equ	150	;# 
   116     0097                     WDTCON          equ	151	;# 
   117     0098                     OSCTUNE         equ	152	;# 
   118     0099                     OSCCON          equ	153	;# 
   119     009A                     OSCSTAT         equ	154	;# 
   120     009B                     ADRES           equ	155	;# 
   121     009B                     ADRESL          equ	155	;# 
   122     009C                     ADRESH          equ	156	;# 
   123     009D                     ADCON0          equ	157	;# 
   124     009E                     ADCON1          equ	158	;# 
   125     010C                     LATA            equ	268	;# 
   126     010D                     LATB            equ	269	;# 
   127     0111                     CM1CON0         equ	273	;# 
   128     0112                     CM1CON1         equ	274	;# 
   129     0113                     CM2CON0         equ	275	;# 
   130     0114                     CM2CON1         equ	276	;# 
   131     0115                     CMOUT           equ	277	;# 
   132     0116                     BORCON          equ	278	;# 
   133     0117                     FVRCON          equ	279	;# 
   134     0118                     DACCON0         equ	280	;# 
   135     0119                     DACCON1         equ	281	;# 
   136     011A                     SRCON0          equ	282	;# 
   137     011B                     SRCON1          equ	283	;# 
   138     011D                     APFCON0         equ	285	;# 
   139     011E                     APFCON1         equ	286	;# 
   140     018C                     ANSELA          equ	396	;# 
   141     018D                     ANSELB          equ	397	;# 
   142     0191                     EEADR           equ	401	;# 
   143     0191                     EEADRL          equ	401	;# 
   144     0192                     EEADRH          equ	402	;# 
   145     0193                     EEDAT           equ	403	;# 
   146     0193                     EEDATL          equ	403	;# 
   147     0193                     EEDATA          equ	403	;# 
   148     0194                     EEDATH          equ	404	;# 
   149     0195                     EECON1          equ	405	;# 
   150     0196                     EECON2          equ	406	;# 
   151     0199                     RCREG           equ	409	;# 
   152     019A                     TXREG           equ	410	;# 
   153     019B                     SP1BRG          equ	411	;# 
   154     019B                     SP1BRGL         equ	411	;# 
   155     019B                     SPBRG           equ	411	;# 
   156     019B                     SPBRGL          equ	411	;# 
   157     019C                     SP1BRGH         equ	412	;# 
   158     019C                     SPBRGH          equ	412	;# 
   159     019D                     RCSTA           equ	413	;# 
   160     019E                     TXSTA           equ	414	;# 
   161     019F                     BAUDCON         equ	415	;# 
   162     020C                     WPUA            equ	524	;# 
   163     020D                     WPUB            equ	525	;# 
   164     0211                     SSP1BUF         equ	529	;# 
   165     0211                     SSPBUF          equ	529	;# 
   166     0212                     SSP1ADD         equ	530	;# 
   167     0212                     SSPADD          equ	530	;# 
   168     0213                     SSP1MSK         equ	531	;# 
   169     0213                     SSPMSK          equ	531	;# 
   170     0214                     SSP1STAT        equ	532	;# 
   171     0214                     SSPSTAT         equ	532	;# 
   172     0215                     SSP1CON1        equ	533	;# 
   173     0215                     SSPCON1         equ	533	;# 
   174     0215                     SSPCON          equ	533	;# 
   175     0216                     SSP1CON2        equ	534	;# 
   176     0216                     SSPCON2         equ	534	;# 
   177     0217                     SSP1CON3        equ	535	;# 
   178     0217                     SSPCON3         equ	535	;# 
   179     0219                     SSP2BUF         equ	537	;# 
   180     021A                     SSP2ADD         equ	538	;# 
   181     021B                     SSP2MSK         equ	539	;# 
   182     021C                     SSP2STAT        equ	540	;# 
   183     021D                     SSP2CON1        equ	541	;# 
   184     021E                     SSP2CON2        equ	542	;# 
   185     021F                     SSP2CON3        equ	543	;# 
   186     0291                     CCPR1           equ	657	;# 
   187     0291                     CCPR1L          equ	657	;# 
   188     0292                     CCPR1H          equ	658	;# 
   189     0293                     CCP1CON         equ	659	;# 
   190     0294                     PWM1CON         equ	660	;# 
   191     0295                     CCP1AS          equ	661	;# 
   192     0295                     ECCP1AS         equ	661	;# 
   193     0296                     PSTR1CON        equ	662	;# 
   194     0298                     CCPR2           equ	664	;# 
   195     0298                     CCPR2L          equ	664	;# 
   196     0299                     CCPR2H          equ	665	;# 
   197     029A                     CCP2CON         equ	666	;# 
   198     029B                     PWM2CON         equ	667	;# 
   199     029C                     CCP2AS          equ	668	;# 
   200     029C                     ECCP2AS         equ	668	;# 
   201     029D                     PSTR2CON        equ	669	;# 
   202     029E                     CCPTMRS         equ	670	;# 
   203     029E                     CCPTMRS0        equ	670	;# 
   204     0311                     CCPR3           equ	785	;# 
   205     0311                     CCPR3L          equ	785	;# 
   206     0312                     CCPR3H          equ	786	;# 
   207     0313                     CCP3CON         equ	787	;# 
   208     0318                     CCPR4           equ	792	;# 
   209     0318                     CCPR4L          equ	792	;# 
   210     0319                     CCPR4H          equ	793	;# 
   211     031A                     CCP4CON         equ	794	;# 
   212     0394                     IOCBP           equ	916	;# 
   213     0395                     IOCBN           equ	917	;# 
   214     0396                     IOCBF           equ	918	;# 
   215     039A                     CLKRCON         equ	922	;# 
   216     039C                     MDCON           equ	924	;# 
   217     039D                     MDSRC           equ	925	;# 
   218     039E                     MDCARL          equ	926	;# 
   219     039F                     MDCARH          equ	927	;# 
   220     0415                     TMR4            equ	1045	;# 
   221     0416                     PR4             equ	1046	;# 
   222     0417                     T4CON           equ	1047	;# 
   223     041C                     TMR6            equ	1052	;# 
   224     041D                     PR6             equ	1053	;# 
   225     041E                     T6CON           equ	1054	;# 
   226     0FE4                     STATUS_SHAD     equ	4068	;# 
   227     0FE5                     WREG_SHAD       equ	4069	;# 
   228     0FE6                     BSR_SHAD        equ	4070	;# 
   229     0FE7                     PCLATH_SHAD     equ	4071	;# 
   230     0FE8                     FSR0L_SHAD      equ	4072	;# 
   231     0FE9                     FSR0H_SHAD      equ	4073	;# 
   232     0FEA                     FSR1L_SHAD      equ	4074	;# 
   233     0FEB                     FSR1H_SHAD      equ	4075	;# 
   234     0FED                     STKPTR          equ	4077	;# 
   235     0FEE                     TOSL            equ	4078	;# 
   236     0FEF                     TOSH            equ	4079	;# 
   237     0000                     INDF0           equ	0	;# 
   238     0001                     INDF1           equ	1	;# 
   239     0002                     PCL             equ	2	;# 
   240     0003                     STATUS          equ	3	;# 
   241     0004                     FSR0L           equ	4	;# 
   242     0005                     FSR0H           equ	5	;# 
   243     0006                     FSR1L           equ	6	;# 
   244     0007                     FSR1H           equ	7	;# 
   245     0008                     BSR             equ	8	;# 
   246     0009                     WREG            equ	9	;# 
   247     000A                     PCLATH          equ	10	;# 
   248     000B                     INTCON          equ	11	;# 
   249     000C                     PORTA           equ	12	;# 
   250     000D                     PORTB           equ	13	;# 
   251     0011                     PIR1            equ	17	;# 
   252     0012                     PIR2            equ	18	;# 
   253     0013                     PIR3            equ	19	;# 
   254     0014                     PIR4            equ	20	;# 
   255     0015                     TMR0            equ	21	;# 
   256     0016                     TMR1            equ	22	;# 
   257     0016                     TMR1L           equ	22	;# 
   258     0017                     TMR1H           equ	23	;# 
   259     0018                     T1CON           equ	24	;# 
   260     0019                     T1GCON          equ	25	;# 
   261     001A                     TMR2            equ	26	;# 
   262     001B                     PR2             equ	27	;# 
   263     001C                     T2CON           equ	28	;# 
   264     001E                     CPSCON0         equ	30	;# 
   265     001F                     CPSCON1         equ	31	;# 
   266     008C                     TRISA           equ	140	;# 
   267     008D                     TRISB           equ	141	;# 
   268     0091                     PIE1            equ	145	;# 
   269     0092                     PIE2            equ	146	;# 
   270     0093                     PIE3            equ	147	;# 
   271     0094                     PIE4            equ	148	;# 
   272     0095                     OPTION_REG      equ	149	;# 
   273     0096                     PCON            equ	150	;# 
   274     0097                     WDTCON          equ	151	;# 
   275     0098                     OSCTUNE         equ	152	;# 
   276     0099                     OSCCON          equ	153	;# 
   277     009A                     OSCSTAT         equ	154	;# 
   278     009B                     ADRES           equ	155	;# 
   279     009B                     ADRESL          equ	155	;# 
   280     009C                     ADRESH          equ	156	;# 
   281     009D                     ADCON0          equ	157	;# 
   282     009E                     ADCON1          equ	158	;# 
   283     010C                     LATA            equ	268	;# 
   284     010D                     LATB            equ	269	;# 
   285     0111                     CM1CON0         equ	273	;# 
   286     0112                     CM1CON1         equ	274	;# 
   287     0113                     CM2CON0         equ	275	;# 
   288     0114                     CM2CON1         equ	276	;# 
   289     0115                     CMOUT           equ	277	;# 
   290     0116                     BORCON          equ	278	;# 
   291     0117                     FVRCON          equ	279	;# 
   292     0118                     DACCON0         equ	280	;# 
   293     0119                     DACCON1         equ	281	;# 
   294     011A                     SRCON0          equ	282	;# 
   295     011B                     SRCON1          equ	283	;# 
   296     011D                     APFCON0         equ	285	;# 
   297     011E                     APFCON1         equ	286	;# 
   298     018C                     ANSELA          equ	396	;# 
   299     018D                     ANSELB          equ	397	;# 
   300     0191                     EEADR           equ	401	;# 
   301     0191                     EEADRL          equ	401	;# 
   302     0192                     EEADRH          equ	402	;# 
   303     0193                     EEDAT           equ	403	;# 
   304     0193                     EEDATL          equ	403	;# 
   305     0193                     EEDATA          equ	403	;# 
   306     0194                     EEDATH          equ	404	;# 
   307     0195                     EECON1          equ	405	;# 
   308     0196                     EECON2          equ	406	;# 
   309     0199                     RCREG           equ	409	;# 
   310     019A                     TXREG           equ	410	;# 
   311     019B                     SP1BRG          equ	411	;# 
   312     019B                     SP1BRGL         equ	411	;# 
   313     019B                     SPBRG           equ	411	;# 
   314     019B                     SPBRGL          equ	411	;# 
   315     019C                     SP1BRGH         equ	412	;# 
   316     019C                     SPBRGH          equ	412	;# 
   317     019D                     RCSTA           equ	413	;# 
   318     019E                     TXSTA           equ	414	;# 
   319     019F                     BAUDCON         equ	415	;# 
   320     020C                     WPUA            equ	524	;# 
   321     020D                     WPUB            equ	525	;# 
   322     0211                     SSP1BUF         equ	529	;# 
   323     0211                     SSPBUF          equ	529	;# 
   324     0212                     SSP1ADD         equ	530	;# 
   325     0212                     SSPADD          equ	530	;# 
   326     0213                     SSP1MSK         equ	531	;# 
   327     0213                     SSPMSK          equ	531	;# 
   328     0214                     SSP1STAT        equ	532	;# 
   329     0214                     SSPSTAT         equ	532	;# 
   330     0215                     SSP1CON1        equ	533	;# 
   331     0215                     SSPCON1         equ	533	;# 
   332     0215                     SSPCON          equ	533	;# 
   333     0216                     SSP1CON2        equ	534	;# 
   334     0216                     SSPCON2         equ	534	;# 
   335     0217                     SSP1CON3        equ	535	;# 
   336     0217                     SSPCON3         equ	535	;# 
   337     0219                     SSP2BUF         equ	537	;# 
   338     021A                     SSP2ADD         equ	538	;# 
   339     021B                     SSP2MSK         equ	539	;# 
   340     021C                     SSP2STAT        equ	540	;# 
   341     021D                     SSP2CON1        equ	541	;# 
   342     021E                     SSP2CON2        equ	542	;# 
   343     021F                     SSP2CON3        equ	543	;# 
   344     0291                     CCPR1           equ	657	;# 
   345     0291                     CCPR1L          equ	657	;# 
   346     0292                     CCPR1H          equ	658	;# 
   347     0293                     CCP1CON         equ	659	;# 
   348     0294                     PWM1CON         equ	660	;# 
   349     0295                     CCP1AS          equ	661	;# 
   350     0295                     ECCP1AS         equ	661	;# 
   351     0296                     PSTR1CON        equ	662	;# 
   352     0298                     CCPR2           equ	664	;# 
   353     0298                     CCPR2L          equ	664	;# 
   354     0299                     CCPR2H          equ	665	;# 
   355     029A                     CCP2CON         equ	666	;# 
   356     029B                     PWM2CON         equ	667	;# 
   357     029C                     CCP2AS          equ	668	;# 
   358     029C                     ECCP2AS         equ	668	;# 
   359     029D                     PSTR2CON        equ	669	;# 
   360     029E                     CCPTMRS         equ	670	;# 
   361     029E                     CCPTMRS0        equ	670	;# 
   362     0311                     CCPR3           equ	785	;# 
   363     0311                     CCPR3L          equ	785	;# 
   364     0312                     CCPR3H          equ	786	;# 
   365     0313                     CCP3CON         equ	787	;# 
   366     0318                     CCPR4           equ	792	;# 
   367     0318                     CCPR4L          equ	792	;# 
   368     0319                     CCPR4H          equ	793	;# 
   369     031A                     CCP4CON         equ	794	;# 
   370     0394                     IOCBP           equ	916	;# 
   371     0395                     IOCBN           equ	917	;# 
   372     0396                     IOCBF           equ	918	;# 
   373     039A                     CLKRCON         equ	922	;# 
   374     039C                     MDCON           equ	924	;# 
   375     039D                     MDSRC           equ	925	;# 
   376     039E                     MDCARL          equ	926	;# 
   377     039F                     MDCARH          equ	927	;# 
   378     0415                     TMR4            equ	1045	;# 
   379     0416                     PR4             equ	1046	;# 
   380     0417                     T4CON           equ	1047	;# 
   381     041C                     TMR6            equ	1052	;# 
   382     041D                     PR6             equ	1053	;# 
   383     041E                     T6CON           equ	1054	;# 
   384     0FE4                     STATUS_SHAD     equ	4068	;# 
   385     0FE5                     WREG_SHAD       equ	4069	;# 
   386     0FE6                     BSR_SHAD        equ	4070	;# 
   387     0FE7                     PCLATH_SHAD     equ	4071	;# 
   388     0FE8                     FSR0L_SHAD      equ	4072	;# 
   389     0FE9                     FSR0H_SHAD      equ	4073	;# 
   390     0FEA                     FSR1L_SHAD      equ	4074	;# 
   391     0FEB                     FSR1H_SHAD      equ	4075	;# 
   392     0FED                     STKPTR          equ	4077	;# 
   393     0FEE                     TOSL            equ	4078	;# 
   394     0FEF                     TOSH            equ	4079	;# 
   395     0000                     INDF0           equ	0	;# 
   396     0001                     INDF1           equ	1	;# 
   397     0002                     PCL             equ	2	;# 
   398     0003                     STATUS          equ	3	;# 
   399     0004                     FSR0L           equ	4	;# 
   400     0005                     FSR0H           equ	5	;# 
   401     0006                     FSR1L           equ	6	;# 
   402     0007                     FSR1H           equ	7	;# 
   403     0008                     BSR             equ	8	;# 
   404     0009                     WREG            equ	9	;# 
   405     000A                     PCLATH          equ	10	;# 
   406     000B                     INTCON          equ	11	;# 
   407     000C                     PORTA           equ	12	;# 
   408     000D                     PORTB           equ	13	;# 
   409     0011                     PIR1            equ	17	;# 
   410     0012                     PIR2            equ	18	;# 
   411     0013                     PIR3            equ	19	;# 
   412     0014                     PIR4            equ	20	;# 
   413     0015                     TMR0            equ	21	;# 
   414     0016                     TMR1            equ	22	;# 
   415     0016                     TMR1L           equ	22	;# 
   416     0017                     TMR1H           equ	23	;# 
   417     0018                     T1CON           equ	24	;# 
   418     0019                     T1GCON          equ	25	;# 
   419     001A                     TMR2            equ	26	;# 
   420     001B                     PR2             equ	27	;# 
   421     001C                     T2CON           equ	28	;# 
   422     001E                     CPSCON0         equ	30	;# 
   423     001F                     CPSCON1         equ	31	;# 
   424     008C                     TRISA           equ	140	;# 
   425     008D                     TRISB           equ	141	;# 
   426     0091                     PIE1            equ	145	;# 
   427     0092                     PIE2            equ	146	;# 
   428     0093                     PIE3            equ	147	;# 
   429     0094                     PIE4            equ	148	;# 
   430     0095                     OPTION_REG      equ	149	;# 
   431     0096                     PCON            equ	150	;# 
   432     0097                     WDTCON          equ	151	;# 
   433     0098                     OSCTUNE         equ	152	;# 
   434     0099                     OSCCON          equ	153	;# 
   435     009A                     OSCSTAT         equ	154	;# 
   436     009B                     ADRES           equ	155	;# 
   437     009B                     ADRESL          equ	155	;# 
   438     009C                     ADRESH          equ	156	;# 
   439     009D                     ADCON0          equ	157	;# 
   440     009E                     ADCON1          equ	158	;# 
   441     010C                     LATA            equ	268	;# 
   442     010D                     LATB            equ	269	;# 
   443     0111                     CM1CON0         equ	273	;# 
   444     0112                     CM1CON1         equ	274	;# 
   445     0113                     CM2CON0         equ	275	;# 
   446     0114                     CM2CON1         equ	276	;# 
   447     0115                     CMOUT           equ	277	;# 
   448     0116                     BORCON          equ	278	;# 
   449     0117                     FVRCON          equ	279	;# 
   450     0118                     DACCON0         equ	280	;# 
   451     0119                     DACCON1         equ	281	;# 
   452     011A                     SRCON0          equ	282	;# 
   453     011B                     SRCON1          equ	283	;# 
   454     011D                     APFCON0         equ	285	;# 
   455     011E                     APFCON1         equ	286	;# 
   456     018C                     ANSELA          equ	396	;# 
   457     018D                     ANSELB          equ	397	;# 
   458     0191                     EEADR           equ	401	;# 
   459     0191                     EEADRL          equ	401	;# 
   460     0192                     EEADRH          equ	402	;# 
   461     0193                     EEDAT           equ	403	;# 
   462     0193                     EEDATL          equ	403	;# 
   463     0193                     EEDATA          equ	403	;# 
   464     0194                     EEDATH          equ	404	;# 
   465     0195                     EECON1          equ	405	;# 
   466     0196                     EECON2          equ	406	;# 
   467     0199                     RCREG           equ	409	;# 
   468     019A                     TXREG           equ	410	;# 
   469     019B                     SP1BRG          equ	411	;# 
   470     019B                     SP1BRGL         equ	411	;# 
   471     019B                     SPBRG           equ	411	;# 
   472     019B                     SPBRGL          equ	411	;# 
   473     019C                     SP1BRGH         equ	412	;# 
   474     019C                     SPBRGH          equ	412	;# 
   475     019D                     RCSTA           equ	413	;# 
   476     019E                     TXSTA           equ	414	;# 
   477     019F                     BAUDCON         equ	415	;# 
   478     020C                     WPUA            equ	524	;# 
   479     020D                     WPUB            equ	525	;# 
   480     0211                     SSP1BUF         equ	529	;# 
   481     0211                     SSPBUF          equ	529	;# 
   482     0212                     SSP1ADD         equ	530	;# 
   483     0212                     SSPADD          equ	530	;# 
   484     0213                     SSP1MSK         equ	531	;# 
   485     0213                     SSPMSK          equ	531	;# 
   486     0214                     SSP1STAT        equ	532	;# 
   487     0214                     SSPSTAT         equ	532	;# 
   488     0215                     SSP1CON1        equ	533	;# 
   489     0215                     SSPCON1         equ	533	;# 
   490     0215                     SSPCON          equ	533	;# 
   491     0216                     SSP1CON2        equ	534	;# 
   492     0216                     SSPCON2         equ	534	;# 
   493     0217                     SSP1CON3        equ	535	;# 
   494     0217                     SSPCON3         equ	535	;# 
   495     0219                     SSP2BUF         equ	537	;# 
   496     021A                     SSP2ADD         equ	538	;# 
   497     021B                     SSP2MSK         equ	539	;# 
   498     021C                     SSP2STAT        equ	540	;# 
   499     021D                     SSP2CON1        equ	541	;# 
   500     021E                     SSP2CON2        equ	542	;# 
   501     021F                     SSP2CON3        equ	543	;# 
   502     0291                     CCPR1           equ	657	;# 
   503     0291                     CCPR1L          equ	657	;# 
   504     0292                     CCPR1H          equ	658	;# 
   505     0293                     CCP1CON         equ	659	;# 
   506     0294                     PWM1CON         equ	660	;# 
   507     0295                     CCP1AS          equ	661	;# 
   508     0295                     ECCP1AS         equ	661	;# 
   509     0296                     PSTR1CON        equ	662	;# 
   510     0298                     CCPR2           equ	664	;# 
   511     0298                     CCPR2L          equ	664	;# 
   512     0299                     CCPR2H          equ	665	;# 
   513     029A                     CCP2CON         equ	666	;# 
   514     029B                     PWM2CON         equ	667	;# 
   515     029C                     CCP2AS          equ	668	;# 
   516     029C                     ECCP2AS         equ	668	;# 
   517     029D                     PSTR2CON        equ	669	;# 
   518     029E                     CCPTMRS         equ	670	;# 
   519     029E                     CCPTMRS0        equ	670	;# 
   520     0311                     CCPR3           equ	785	;# 
   521     0311                     CCPR3L          equ	785	;# 
   522     0312                     CCPR3H          equ	786	;# 
   523     0313                     CCP3CON         equ	787	;# 
   524     0318                     CCPR4           equ	792	;# 
   525     0318                     CCPR4L          equ	792	;# 
   526     0319                     CCPR4H          equ	793	;# 
   527     031A                     CCP4CON         equ	794	;# 
   528     0394                     IOCBP           equ	916	;# 
   529     0395                     IOCBN           equ	917	;# 
   530     0396                     IOCBF           equ	918	;# 
   531     039A                     CLKRCON         equ	922	;# 
   532     039C                     MDCON           equ	924	;# 
   533     039D                     MDSRC           equ	925	;# 
   534     039E                     MDCARL          equ	926	;# 
   535     039F                     MDCARH          equ	927	;# 
   536     0415                     TMR4            equ	1045	;# 
   537     0416                     PR4             equ	1046	;# 
   538     0417                     T4CON           equ	1047	;# 
   539     041C                     TMR6            equ	1052	;# 
   540     041D                     PR6             equ	1053	;# 
   541     041E                     T6CON           equ	1054	;# 
   542     0FE4                     STATUS_SHAD     equ	4068	;# 
   543     0FE5                     WREG_SHAD       equ	4069	;# 
   544     0FE6                     BSR_SHAD        equ	4070	;# 
   545     0FE7                     PCLATH_SHAD     equ	4071	;# 
   546     0FE8                     FSR0L_SHAD      equ	4072	;# 
   547     0FE9                     FSR0H_SHAD      equ	4073	;# 
   548     0FEA                     FSR1L_SHAD      equ	4074	;# 
   549     0FEB                     FSR1H_SHAD      equ	4075	;# 
   550     0FED                     STKPTR          equ	4077	;# 
   551     0FEE                     TOSL            equ	4078	;# 
   552     0FEF                     TOSH            equ	4079	;# 
   553     0000                     INDF0           equ	0	;# 
   554     0001                     INDF1           equ	1	;# 
   555     0002                     PCL             equ	2	;# 
   556     0003                     STATUS          equ	3	;# 
   557     0004                     FSR0L           equ	4	;# 
   558     0005                     FSR0H           equ	5	;# 
   559     0006                     FSR1L           equ	6	;# 
   560     0007                     FSR1H           equ	7	;# 
   561     0008                     BSR             equ	8	;# 
   562     0009                     WREG            equ	9	;# 
   563     000A                     PCLATH          equ	10	;# 
   564     000B                     INTCON          equ	11	;# 
   565     000C                     PORTA           equ	12	;# 
   566     000D                     PORTB           equ	13	;# 
   567     0011                     PIR1            equ	17	;# 
   568     0012                     PIR2            equ	18	;# 
   569     0013                     PIR3            equ	19	;# 
   570     0014                     PIR4            equ	20	;# 
   571     0015                     TMR0            equ	21	;# 
   572     0016                     TMR1            equ	22	;# 
   573     0016                     TMR1L           equ	22	;# 
   574     0017                     TMR1H           equ	23	;# 
   575     0018                     T1CON           equ	24	;# 
   576     0019                     T1GCON          equ	25	;# 
   577     001A                     TMR2            equ	26	;# 
   578     001B                     PR2             equ	27	;# 
   579     001C                     T2CON           equ	28	;# 
   580     001E                     CPSCON0         equ	30	;# 
   581     001F                     CPSCON1         equ	31	;# 
   582     008C                     TRISA           equ	140	;# 
   583     008D                     TRISB           equ	141	;# 
   584     0091                     PIE1            equ	145	;# 
   585     0092                     PIE2            equ	146	;# 
   586     0093                     PIE3            equ	147	;# 
   587     0094                     PIE4            equ	148	;# 
   588     0095                     OPTION_REG      equ	149	;# 
   589     0096                     PCON            equ	150	;# 
   590     0097                     WDTCON          equ	151	;# 
   591     0098                     OSCTUNE         equ	152	;# 
   592     0099                     OSCCON          equ	153	;# 
   593     009A                     OSCSTAT         equ	154	;# 
   594     009B                     ADRES           equ	155	;# 
   595     009B                     ADRESL          equ	155	;# 
   596     009C                     ADRESH          equ	156	;# 
   597     009D                     ADCON0          equ	157	;# 
   598     009E                     ADCON1          equ	158	;# 
   599     010C                     LATA            equ	268	;# 
   600     010D                     LATB            equ	269	;# 
   601     0111                     CM1CON0         equ	273	;# 
   602     0112                     CM1CON1         equ	274	;# 
   603     0113                     CM2CON0         equ	275	;# 
   604     0114                     CM2CON1         equ	276	;# 
   605     0115                     CMOUT           equ	277	;# 
   606     0116                     BORCON          equ	278	;# 
   607     0117                     FVRCON          equ	279	;# 
   608     0118                     DACCON0         equ	280	;# 
   609     0119                     DACCON1         equ	281	;# 
   610     011A                     SRCON0          equ	282	;# 
   611     011B                     SRCON1          equ	283	;# 
   612     011D                     APFCON0         equ	285	;# 
   613     011E                     APFCON1         equ	286	;# 
   614     018C                     ANSELA          equ	396	;# 
   615     018D                     ANSELB          equ	397	;# 
   616     0191                     EEADR           equ	401	;# 
   617     0191                     EEADRL          equ	401	;# 
   618     0192                     EEADRH          equ	402	;# 
   619     0193                     EEDAT           equ	403	;# 
   620     0193                     EEDATL          equ	403	;# 
   621     0193                     EEDATA          equ	403	;# 
   622     0194                     EEDATH          equ	404	;# 
   623     0195                     EECON1          equ	405	;# 
   624     0196                     EECON2          equ	406	;# 
   625     0199                     RCREG           equ	409	;# 
   626     019A                     TXREG           equ	410	;# 
   627     019B                     SP1BRG          equ	411	;# 
   628     019B                     SP1BRGL         equ	411	;# 
   629     019B                     SPBRG           equ	411	;# 
   630     019B                     SPBRGL          equ	411	;# 
   631     019C                     SP1BRGH         equ	412	;# 
   632     019C                     SPBRGH          equ	412	;# 
   633     019D                     RCSTA           equ	413	;# 
   634     019E                     TXSTA           equ	414	;# 
   635     019F                     BAUDCON         equ	415	;# 
   636     020C                     WPUA            equ	524	;# 
   637     020D                     WPUB            equ	525	;# 
   638     0211                     SSP1BUF         equ	529	;# 
   639     0211                     SSPBUF          equ	529	;# 
   640     0212                     SSP1ADD         equ	530	;# 
   641     0212                     SSPADD          equ	530	;# 
   642     0213                     SSP1MSK         equ	531	;# 
   643     0213                     SSPMSK          equ	531	;# 
   644     0214                     SSP1STAT        equ	532	;# 
   645     0214                     SSPSTAT         equ	532	;# 
   646     0215                     SSP1CON1        equ	533	;# 
   647     0215                     SSPCON1         equ	533	;# 
   648     0215                     SSPCON          equ	533	;# 
   649     0216                     SSP1CON2        equ	534	;# 
   650     0216                     SSPCON2         equ	534	;# 
   651     0217                     SSP1CON3        equ	535	;# 
   652     0217                     SSPCON3         equ	535	;# 
   653     0219                     SSP2BUF         equ	537	;# 
   654     021A                     SSP2ADD         equ	538	;# 
   655     021B                     SSP2MSK         equ	539	;# 
   656     021C                     SSP2STAT        equ	540	;# 
   657     021D                     SSP2CON1        equ	541	;# 
   658     021E                     SSP2CON2        equ	542	;# 
   659     021F                     SSP2CON3        equ	543	;# 
   660     0291                     CCPR1           equ	657	;# 
   661     0291                     CCPR1L          equ	657	;# 
   662     0292                     CCPR1H          equ	658	;# 
   663     0293                     CCP1CON         equ	659	;# 
   664     0294                     PWM1CON         equ	660	;# 
   665     0295                     CCP1AS          equ	661	;# 
   666     0295                     ECCP1AS         equ	661	;# 
   667     0296                     PSTR1CON        equ	662	;# 
   668     0298                     CCPR2           equ	664	;# 
   669     0298                     CCPR2L          equ	664	;# 
   670     0299                     CCPR2H          equ	665	;# 
   671     029A                     CCP2CON         equ	666	;# 
   672     029B                     PWM2CON         equ	667	;# 
   673     029C                     CCP2AS          equ	668	;# 
   674     029C                     ECCP2AS         equ	668	;# 
   675     029D                     PSTR2CON        equ	669	;# 
   676     029E                     CCPTMRS         equ	670	;# 
   677     029E                     CCPTMRS0        equ	670	;# 
   678     0311                     CCPR3           equ	785	;# 
   679     0311                     CCPR3L          equ	785	;# 
   680     0312                     CCPR3H          equ	786	;# 
   681     0313                     CCP3CON         equ	787	;# 
   682     0318                     CCPR4           equ	792	;# 
   683     0318                     CCPR4L          equ	792	;# 
   684     0319                     CCPR4H          equ	793	;# 
   685     031A                     CCP4CON         equ	794	;# 
   686     0394                     IOCBP           equ	916	;# 
   687     0395                     IOCBN           equ	917	;# 
   688     0396                     IOCBF           equ	918	;# 
   689     039A                     CLKRCON         equ	922	;# 
   690     039C                     MDCON           equ	924	;# 
   691     039D                     MDSRC           equ	925	;# 
   692     039E                     MDCARL          equ	926	;# 
   693     039F                     MDCARH          equ	927	;# 
   694     0415                     TMR4            equ	1045	;# 
   695     0416                     PR4             equ	1046	;# 
   696     0417                     T4CON           equ	1047	;# 
   697     041C                     TMR6            equ	1052	;# 
   698     041D                     PR6             equ	1053	;# 
   699     041E                     T6CON           equ	1054	;# 
   700     0FE4                     STATUS_SHAD     equ	4068	;# 
   701     0FE5                     WREG_SHAD       equ	4069	;# 
   702     0FE6                     BSR_SHAD        equ	4070	;# 
   703     0FE7                     PCLATH_SHAD     equ	4071	;# 
   704     0FE8                     FSR0L_SHAD      equ	4072	;# 
   705     0FE9                     FSR0H_SHAD      equ	4073	;# 
   706     0FEA                     FSR1L_SHAD      equ	4074	;# 
   707     0FEB                     FSR1H_SHAD      equ	4075	;# 
   708     0FED                     STKPTR          equ	4077	;# 
   709     0FEE                     TOSL            equ	4078	;# 
   710     0FEF                     TOSH            equ	4079	;# 
   711     0000                     INDF0           equ	0	;# 
   712     0001                     INDF1           equ	1	;# 
   713     0002                     PCL             equ	2	;# 
   714     0003                     STATUS          equ	3	;# 
   715     0004                     FSR0L           equ	4	;# 
   716     0005                     FSR0H           equ	5	;# 
   717     0006                     FSR1L           equ	6	;# 
   718     0007                     FSR1H           equ	7	;# 
   719     0008                     BSR             equ	8	;# 
   720     0009                     WREG            equ	9	;# 
   721     000A                     PCLATH          equ	10	;# 
   722     000B                     INTCON          equ	11	;# 
   723     000C                     PORTA           equ	12	;# 
   724     000D                     PORTB           equ	13	;# 
   725     0011                     PIR1            equ	17	;# 
   726     0012                     PIR2            equ	18	;# 
   727     0013                     PIR3            equ	19	;# 
   728     0014                     PIR4            equ	20	;# 
   729     0015                     TMR0            equ	21	;# 
   730     0016                     TMR1            equ	22	;# 
   731     0016                     TMR1L           equ	22	;# 
   732     0017                     TMR1H           equ	23	;# 
   733     0018                     T1CON           equ	24	;# 
   734     0019                     T1GCON          equ	25	;# 
   735     001A                     TMR2            equ	26	;# 
   736     001B                     PR2             equ	27	;# 
   737     001C                     T2CON           equ	28	;# 
   738     001E                     CPSCON0         equ	30	;# 
   739     001F                     CPSCON1         equ	31	;# 
   740     008C                     TRISA           equ	140	;# 
   741     008D                     TRISB           equ	141	;# 
   742     0091                     PIE1            equ	145	;# 
   743     0092                     PIE2            equ	146	;# 
   744     0093                     PIE3            equ	147	;# 
   745     0094                     PIE4            equ	148	;# 
   746     0095                     OPTION_REG      equ	149	;# 
   747     0096                     PCON            equ	150	;# 
   748     0097                     WDTCON          equ	151	;# 
   749     0098                     OSCTUNE         equ	152	;# 
   750     0099                     OSCCON          equ	153	;# 
   751     009A                     OSCSTAT         equ	154	;# 
   752     009B                     ADRES           equ	155	;# 
   753     009B                     ADRESL          equ	155	;# 
   754     009C                     ADRESH          equ	156	;# 
   755     009D                     ADCON0          equ	157	;# 
   756     009E                     ADCON1          equ	158	;# 
   757     010C                     LATA            equ	268	;# 
   758     010D                     LATB            equ	269	;# 
   759     0111                     CM1CON0         equ	273	;# 
   760     0112                     CM1CON1         equ	274	;# 
   761     0113                     CM2CON0         equ	275	;# 
   762     0114                     CM2CON1         equ	276	;# 
   763     0115                     CMOUT           equ	277	;# 
   764     0116                     BORCON          equ	278	;# 
   765     0117                     FVRCON          equ	279	;# 
   766     0118                     DACCON0         equ	280	;# 
   767     0119                     DACCON1         equ	281	;# 
   768     011A                     SRCON0          equ	282	;# 
   769     011B                     SRCON1          equ	283	;# 
   770     011D                     APFCON0         equ	285	;# 
   771     011E                     APFCON1         equ	286	;# 
   772     018C                     ANSELA          equ	396	;# 
   773     018D                     ANSELB          equ	397	;# 
   774     0191                     EEADR           equ	401	;# 
   775     0191                     EEADRL          equ	401	;# 
   776     0192                     EEADRH          equ	402	;# 
   777     0193                     EEDAT           equ	403	;# 
   778     0193                     EEDATL          equ	403	;# 
   779     0193                     EEDATA          equ	403	;# 
   780     0194                     EEDATH          equ	404	;# 
   781     0195                     EECON1          equ	405	;# 
   782     0196                     EECON2          equ	406	;# 
   783     0199                     RCREG           equ	409	;# 
   784     019A                     TXREG           equ	410	;# 
   785     019B                     SP1BRG          equ	411	;# 
   786     019B                     SP1BRGL         equ	411	;# 
   787     019B                     SPBRG           equ	411	;# 
   788     019B                     SPBRGL          equ	411	;# 
   789     019C                     SP1BRGH         equ	412	;# 
   790     019C                     SPBRGH          equ	412	;# 
   791     019D                     RCSTA           equ	413	;# 
   792     019E                     TXSTA           equ	414	;# 
   793     019F                     BAUDCON         equ	415	;# 
   794     020C                     WPUA            equ	524	;# 
   795     020D                     WPUB            equ	525	;# 
   796     0211                     SSP1BUF         equ	529	;# 
   797     0211                     SSPBUF          equ	529	;# 
   798     0212                     SSP1ADD         equ	530	;# 
   799     0212                     SSPADD          equ	530	;# 
   800     0213                     SSP1MSK         equ	531	;# 
   801     0213                     SSPMSK          equ	531	;# 
   802     0214                     SSP1STAT        equ	532	;# 
   803     0214                     SSPSTAT         equ	532	;# 
   804     0215                     SSP1CON1        equ	533	;# 
   805     0215                     SSPCON1         equ	533	;# 
   806     0215                     SSPCON          equ	533	;# 
   807     0216                     SSP1CON2        equ	534	;# 
   808     0216                     SSPCON2         equ	534	;# 
   809     0217                     SSP1CON3        equ	535	;# 
   810     0217                     SSPCON3         equ	535	;# 
   811     0219                     SSP2BUF         equ	537	;# 
   812     021A                     SSP2ADD         equ	538	;# 
   813     021B                     SSP2MSK         equ	539	;# 
   814     021C                     SSP2STAT        equ	540	;# 
   815     021D                     SSP2CON1        equ	541	;# 
   816     021E                     SSP2CON2        equ	542	;# 
   817     021F                     SSP2CON3        equ	543	;# 
   818     0291                     CCPR1           equ	657	;# 
   819     0291                     CCPR1L          equ	657	;# 
   820     0292                     CCPR1H          equ	658	;# 
   821     0293                     CCP1CON         equ	659	;# 
   822     0294                     PWM1CON         equ	660	;# 
   823     0295                     CCP1AS          equ	661	;# 
   824     0295                     ECCP1AS         equ	661	;# 
   825     0296                     PSTR1CON        equ	662	;# 
   826     0298                     CCPR2           equ	664	;# 
   827     0298                     CCPR2L          equ	664	;# 
   828     0299                     CCPR2H          equ	665	;# 
   829     029A                     CCP2CON         equ	666	;# 
   830     029B                     PWM2CON         equ	667	;# 
   831     029C                     CCP2AS          equ	668	;# 
   832     029C                     ECCP2AS         equ	668	;# 
   833     029D                     PSTR2CON        equ	669	;# 
   834     029E                     CCPTMRS         equ	670	;# 
   835     029E                     CCPTMRS0        equ	670	;# 
   836     0311                     CCPR3           equ	785	;# 
   837     0311                     CCPR3L          equ	785	;# 
   838     0312                     CCPR3H          equ	786	;# 
   839     0313                     CCP3CON         equ	787	;# 
   840     0318                     CCPR4           equ	792	;# 
   841     0318                     CCPR4L          equ	792	;# 
   842     0319                     CCPR4H          equ	793	;# 
   843     031A                     CCP4CON         equ	794	;# 
   844     0394                     IOCBP           equ	916	;# 
   845     0395                     IOCBN           equ	917	;# 
   846     0396                     IOCBF           equ	918	;# 
   847     039A                     CLKRCON         equ	922	;# 
   848     039C                     MDCON           equ	924	;# 
   849     039D                     MDSRC           equ	925	;# 
   850     039E                     MDCARL          equ	926	;# 
   851     039F                     MDCARH          equ	927	;# 
   852     0415                     TMR4            equ	1045	;# 
   853     0416                     PR4             equ	1046	;# 
   854     0417                     T4CON           equ	1047	;# 
   855     041C                     TMR6            equ	1052	;# 
   856     041D                     PR6             equ	1053	;# 
   857     041E                     T6CON           equ	1054	;# 
   858     0FE4                     STATUS_SHAD     equ	4068	;# 
   859     0FE5                     WREG_SHAD       equ	4069	;# 
   860     0FE6                     BSR_SHAD        equ	4070	;# 
   861     0FE7                     PCLATH_SHAD     equ	4071	;# 
   862     0FE8                     FSR0L_SHAD      equ	4072	;# 
   863     0FE9                     FSR0H_SHAD      equ	4073	;# 
   864     0FEA                     FSR1L_SHAD      equ	4074	;# 
   865     0FEB                     FSR1H_SHAD      equ	4075	;# 
   866     0FED                     STKPTR          equ	4077	;# 
   867     0FEE                     TOSL            equ	4078	;# 
   868     0FEF                     TOSH            equ	4079	;# 
   869     0000                     INDF0           equ	0	;# 
   870     0001                     INDF1           equ	1	;# 
   871     0002                     PCL             equ	2	;# 
   872     0003                     STATUS          equ	3	;# 
   873     0004                     FSR0L           equ	4	;# 
   874     0005                     FSR0H           equ	5	;# 
   875     0006                     FSR1L           equ	6	;# 
   876     0007                     FSR1H           equ	7	;# 
   877     0008                     BSR             equ	8	;# 
   878     0009                     WREG            equ	9	;# 
   879     000A                     PCLATH          equ	10	;# 
   880     000B                     INTCON          equ	11	;# 
   881     000C                     PORTA           equ	12	;# 
   882     000D                     PORTB           equ	13	;# 
   883     0011                     PIR1            equ	17	;# 
   884     0012                     PIR2            equ	18	;# 
   885     0013                     PIR3            equ	19	;# 
   886     0014                     PIR4            equ	20	;# 
   887     0015                     TMR0            equ	21	;# 
   888     0016                     TMR1            equ	22	;# 
   889     0016                     TMR1L           equ	22	;# 
   890     0017                     TMR1H           equ	23	;# 
   891     0018                     T1CON           equ	24	;# 
   892     0019                     T1GCON          equ	25	;# 
   893     001A                     TMR2            equ	26	;# 
   894     001B                     PR2             equ	27	;# 
   895     001C                     T2CON           equ	28	;# 
   896     001E                     CPSCON0         equ	30	;# 
   897     001F                     CPSCON1         equ	31	;# 
   898     008C                     TRISA           equ	140	;# 
   899     008D                     TRISB           equ	141	;# 
   900     0091                     PIE1            equ	145	;# 
   901     0092                     PIE2            equ	146	;# 
   902     0093                     PIE3            equ	147	;# 
   903     0094                     PIE4            equ	148	;# 
   904     0095                     OPTION_REG      equ	149	;# 
   905     0096                     PCON            equ	150	;# 
   906     0097                     WDTCON          equ	151	;# 
   907     0098                     OSCTUNE         equ	152	;# 
   908     0099                     OSCCON          equ	153	;# 
   909     009A                     OSCSTAT         equ	154	;# 
   910     009B                     ADRES           equ	155	;# 
   911     009B                     ADRESL          equ	155	;# 
   912     009C                     ADRESH          equ	156	;# 
   913     009D                     ADCON0          equ	157	;# 
   914     009E                     ADCON1          equ	158	;# 
   915     010C                     LATA            equ	268	;# 
   916     010D                     LATB            equ	269	;# 
   917     0111                     CM1CON0         equ	273	;# 
   918     0112                     CM1CON1         equ	274	;# 
   919     0113                     CM2CON0         equ	275	;# 
   920     0114                     CM2CON1         equ	276	;# 
   921     0115                     CMOUT           equ	277	;# 
   922     0116                     BORCON          equ	278	;# 
   923     0117                     FVRCON          equ	279	;# 
   924     0118                     DACCON0         equ	280	;# 
   925     0119                     DACCON1         equ	281	;# 
   926     011A                     SRCON0          equ	282	;# 
   927     011B                     SRCON1          equ	283	;# 
   928     011D                     APFCON0         equ	285	;# 
   929     011E                     APFCON1         equ	286	;# 
   930     018C                     ANSELA          equ	396	;# 
   931     018D                     ANSELB          equ	397	;# 
   932     0191                     EEADR           equ	401	;# 
   933     0191                     EEADRL          equ	401	;# 
   934     0192                     EEADRH          equ	402	;# 
   935     0193                     EEDAT           equ	403	;# 
   936     0193                     EEDATL          equ	403	;# 
   937     0193                     EEDATA          equ	403	;# 
   938     0194                     EEDATH          equ	404	;# 
   939     0195                     EECON1          equ	405	;# 
   940     0196                     EECON2          equ	406	;# 
   941     0199                     RCREG           equ	409	;# 
   942     019A                     TXREG           equ	410	;# 
   943     019B                     SP1BRG          equ	411	;# 
   944     019B                     SP1BRGL         equ	411	;# 
   945     019B                     SPBRG           equ	411	;# 
   946     019B                     SPBRGL          equ	411	;# 
   947     019C                     SP1BRGH         equ	412	;# 
   948     019C                     SPBRGH          equ	412	;# 
   949     019D                     RCSTA           equ	413	;# 
   950     019E                     TXSTA           equ	414	;# 
   951     019F                     BAUDCON         equ	415	;# 
   952     020C                     WPUA            equ	524	;# 
   953     020D                     WPUB            equ	525	;# 
   954     0211                     SSP1BUF         equ	529	;# 
   955     0211                     SSPBUF          equ	529	;# 
   956     0212                     SSP1ADD         equ	530	;# 
   957     0212                     SSPADD          equ	530	;# 
   958     0213                     SSP1MSK         equ	531	;# 
   959     0213                     SSPMSK          equ	531	;# 
   960     0214                     SSP1STAT        equ	532	;# 
   961     0214                     SSPSTAT         equ	532	;# 
   962     0215                     SSP1CON1        equ	533	;# 
   963     0215                     SSPCON1         equ	533	;# 
   964     0215                     SSPCON          equ	533	;# 
   965     0216                     SSP1CON2        equ	534	;# 
   966     0216                     SSPCON2         equ	534	;# 
   967     0217                     SSP1CON3        equ	535	;# 
   968     0217                     SSPCON3         equ	535	;# 
   969     0219                     SSP2BUF         equ	537	;# 
   970     021A                     SSP2ADD         equ	538	;# 
   971     021B                     SSP2MSK         equ	539	;# 
   972     021C                     SSP2STAT        equ	540	;# 
   973     021D                     SSP2CON1        equ	541	;# 
   974     021E                     SSP2CON2        equ	542	;# 
   975     021F                     SSP2CON3        equ	543	;# 
   976     0291                     CCPR1           equ	657	;# 
   977     0291                     CCPR1L          equ	657	;# 
   978     0292                     CCPR1H          equ	658	;# 
   979     0293                     CCP1CON         equ	659	;# 
   980     0294                     PWM1CON         equ	660	;# 
   981     0295                     CCP1AS          equ	661	;# 
   982     0295                     ECCP1AS         equ	661	;# 
   983     0296                     PSTR1CON        equ	662	;# 
   984     0298                     CCPR2           equ	664	;# 
   985     0298                     CCPR2L          equ	664	;# 
   986     0299                     CCPR2H          equ	665	;# 
   987     029A                     CCP2CON         equ	666	;# 
   988     029B                     PWM2CON         equ	667	;# 
   989     029C                     CCP2AS          equ	668	;# 
   990     029C                     ECCP2AS         equ	668	;# 
   991     029D                     PSTR2CON        equ	669	;# 
   992     029E                     CCPTMRS         equ	670	;# 
   993     029E                     CCPTMRS0        equ	670	;# 
   994     0311                     CCPR3           equ	785	;# 
   995     0311                     CCPR3L          equ	785	;# 
   996     0312                     CCPR3H          equ	786	;# 
   997     0313                     CCP3CON         equ	787	;# 
   998     0318                     CCPR4           equ	792	;# 
   999     0318                     CCPR4L          equ	792	;# 
  1000     0319                     CCPR4H          equ	793	;# 
  1001     031A                     CCP4CON         equ	794	;# 
  1002     0394                     IOCBP           equ	916	;# 
  1003     0395                     IOCBN           equ	917	;# 
  1004     0396                     IOCBF           equ	918	;# 
  1005     039A                     CLKRCON         equ	922	;# 
  1006     039C                     MDCON           equ	924	;# 
  1007     039D                     MDSRC           equ	925	;# 
  1008     039E                     MDCARL          equ	926	;# 
  1009     039F                     MDCARH          equ	927	;# 
  1010     0415                     TMR4            equ	1045	;# 
  1011     0416                     PR4             equ	1046	;# 
  1012     0417                     T4CON           equ	1047	;# 
  1013     041C                     TMR6            equ	1052	;# 
  1014     041D                     PR6             equ	1053	;# 
  1015     041E                     T6CON           equ	1054	;# 
  1016     0FE4                     STATUS_SHAD     equ	4068	;# 
  1017     0FE5                     WREG_SHAD       equ	4069	;# 
  1018     0FE6                     BSR_SHAD        equ	4070	;# 
  1019     0FE7                     PCLATH_SHAD     equ	4071	;# 
  1020     0FE8                     FSR0L_SHAD      equ	4072	;# 
  1021     0FE9                     FSR0H_SHAD      equ	4073	;# 
  1022     0FEA                     FSR1L_SHAD      equ	4074	;# 
  1023     0FEB                     FSR1H_SHAD      equ	4075	;# 
  1024     0FED                     STKPTR          equ	4077	;# 
  1025     0FEE                     TOSL            equ	4078	;# 
  1026     0FEF                     TOSH            equ	4079	;# 
  1027     0000                     INDF0           equ	0	;# 
  1028     0001                     INDF1           equ	1	;# 
  1029     0002                     PCL             equ	2	;# 
  1030     0003                     STATUS          equ	3	;# 
  1031     0004                     FSR0L           equ	4	;# 
  1032     0005                     FSR0H           equ	5	;# 
  1033     0006                     FSR1L           equ	6	;# 
  1034     0007                     FSR1H           equ	7	;# 
  1035     0008                     BSR             equ	8	;# 
  1036     0009                     WREG            equ	9	;# 
  1037     000A                     PCLATH          equ	10	;# 
  1038     000B                     INTCON          equ	11	;# 
  1039     000C                     PORTA           equ	12	;# 
  1040     000D                     PORTB           equ	13	;# 
  1041     0011                     PIR1            equ	17	;# 
  1042     0012                     PIR2            equ	18	;# 
  1043     0013                     PIR3            equ	19	;# 
  1044     0014                     PIR4            equ	20	;# 
  1045     0015                     TMR0            equ	21	;# 
  1046     0016                     TMR1            equ	22	;# 
  1047     0016                     TMR1L           equ	22	;# 
  1048     0017                     TMR1H           equ	23	;# 
  1049     0018                     T1CON           equ	24	;# 
  1050     0019                     T1GCON          equ	25	;# 
  1051     001A                     TMR2            equ	26	;# 
  1052     001B                     PR2             equ	27	;# 
  1053     001C                     T2CON           equ	28	;# 
  1054     001E                     CPSCON0         equ	30	;# 
  1055     001F                     CPSCON1         equ	31	;# 
  1056     008C                     TRISA           equ	140	;# 
  1057     008D                     TRISB           equ	141	;# 
  1058     0091                     PIE1            equ	145	;# 
  1059     0092                     PIE2            equ	146	;# 
  1060     0093                     PIE3            equ	147	;# 
  1061     0094                     PIE4            equ	148	;# 
  1062     0095                     OPTION_REG      equ	149	;# 
  1063     0096                     PCON            equ	150	;# 
  1064     0097                     WDTCON          equ	151	;# 
  1065     0098                     OSCTUNE         equ	152	;# 
  1066     0099                     OSCCON          equ	153	;# 
  1067     009A                     OSCSTAT         equ	154	;# 
  1068     009B                     ADRES           equ	155	;# 
  1069     009B                     ADRESL          equ	155	;# 
  1070     009C                     ADRESH          equ	156	;# 
  1071     009D                     ADCON0          equ	157	;# 
  1072     009E                     ADCON1          equ	158	;# 
  1073     010C                     LATA            equ	268	;# 
  1074     010D                     LATB            equ	269	;# 
  1075     0111                     CM1CON0         equ	273	;# 
  1076     0112                     CM1CON1         equ	274	;# 
  1077     0113                     CM2CON0         equ	275	;# 
  1078     0114                     CM2CON1         equ	276	;# 
  1079     0115                     CMOUT           equ	277	;# 
  1080     0116                     BORCON          equ	278	;# 
  1081     0117                     FVRCON          equ	279	;# 
  1082     0118                     DACCON0         equ	280	;# 
  1083     0119                     DACCON1         equ	281	;# 
  1084     011A                     SRCON0          equ	282	;# 
  1085     011B                     SRCON1          equ	283	;# 
  1086     011D                     APFCON0         equ	285	;# 
  1087     011E                     APFCON1         equ	286	;# 
  1088     018C                     ANSELA          equ	396	;# 
  1089     018D                     ANSELB          equ	397	;# 
  1090     0191                     EEADR           equ	401	;# 
  1091     0191                     EEADRL          equ	401	;# 
  1092     0192                     EEADRH          equ	402	;# 
  1093     0193                     EEDAT           equ	403	;# 
  1094     0193                     EEDATL          equ	403	;# 
  1095     0193                     EEDATA          equ	403	;# 
  1096     0194                     EEDATH          equ	404	;# 
  1097     0195                     EECON1          equ	405	;# 
  1098     0196                     EECON2          equ	406	;# 
  1099     0199                     RCREG           equ	409	;# 
  1100     019A                     TXREG           equ	410	;# 
  1101     019B                     SP1BRG          equ	411	;# 
  1102     019B                     SP1BRGL         equ	411	;# 
  1103     019B                     SPBRG           equ	411	;# 
  1104     019B                     SPBRGL          equ	411	;# 
  1105     019C                     SP1BRGH         equ	412	;# 
  1106     019C                     SPBRGH          equ	412	;# 
  1107     019D                     RCSTA           equ	413	;# 
  1108     019E                     TXSTA           equ	414	;# 
  1109     019F                     BAUDCON         equ	415	;# 
  1110     020C                     WPUA            equ	524	;# 
  1111     020D                     WPUB            equ	525	;# 
  1112     0211                     SSP1BUF         equ	529	;# 
  1113     0211                     SSPBUF          equ	529	;# 
  1114     0212                     SSP1ADD         equ	530	;# 
  1115     0212                     SSPADD          equ	530	;# 
  1116     0213                     SSP1MSK         equ	531	;# 
  1117     0213                     SSPMSK          equ	531	;# 
  1118     0214                     SSP1STAT        equ	532	;# 
  1119     0214                     SSPSTAT         equ	532	;# 
  1120     0215                     SSP1CON1        equ	533	;# 
  1121     0215                     SSPCON1         equ	533	;# 
  1122     0215                     SSPCON          equ	533	;# 
  1123     0216                     SSP1CON2        equ	534	;# 
  1124     0216                     SSPCON2         equ	534	;# 
  1125     0217                     SSP1CON3        equ	535	;# 
  1126     0217                     SSPCON3         equ	535	;# 
  1127     0219                     SSP2BUF         equ	537	;# 
  1128     021A                     SSP2ADD         equ	538	;# 
  1129     021B                     SSP2MSK         equ	539	;# 
  1130     021C                     SSP2STAT        equ	540	;# 
  1131     021D                     SSP2CON1        equ	541	;# 
  1132     021E                     SSP2CON2        equ	542	;# 
  1133     021F                     SSP2CON3        equ	543	;# 
  1134     0291                     CCPR1           equ	657	;# 
  1135     0291                     CCPR1L          equ	657	;# 
  1136     0292                     CCPR1H          equ	658	;# 
  1137     0293                     CCP1CON         equ	659	;# 
  1138     0294                     PWM1CON         equ	660	;# 
  1139     0295                     CCP1AS          equ	661	;# 
  1140     0295                     ECCP1AS         equ	661	;# 
  1141     0296                     PSTR1CON        equ	662	;# 
  1142     0298                     CCPR2           equ	664	;# 
  1143     0298                     CCPR2L          equ	664	;# 
  1144     0299                     CCPR2H          equ	665	;# 
  1145     029A                     CCP2CON         equ	666	;# 
  1146     029B                     PWM2CON         equ	667	;# 
  1147     029C                     CCP2AS          equ	668	;# 
  1148     029C                     ECCP2AS         equ	668	;# 
  1149     029D                     PSTR2CON        equ	669	;# 
  1150     029E                     CCPTMRS         equ	670	;# 
  1151     029E                     CCPTMRS0        equ	670	;# 
  1152     0311                     CCPR3           equ	785	;# 
  1153     0311                     CCPR3L          equ	785	;# 
  1154     0312                     CCPR3H          equ	786	;# 
  1155     0313                     CCP3CON         equ	787	;# 
  1156     0318                     CCPR4           equ	792	;# 
  1157     0318                     CCPR4L          equ	792	;# 
  1158     0319                     CCPR4H          equ	793	;# 
  1159     031A                     CCP4CON         equ	794	;# 
  1160     0394                     IOCBP           equ	916	;# 
  1161     0395                     IOCBN           equ	917	;# 
  1162     0396                     IOCBF           equ	918	;# 
  1163     039A                     CLKRCON         equ	922	;# 
  1164     039C                     MDCON           equ	924	;# 
  1165     039D                     MDSRC           equ	925	;# 
  1166     039E                     MDCARL          equ	926	;# 
  1167     039F                     MDCARH          equ	927	;# 
  1168     0415                     TMR4            equ	1045	;# 
  1169     0416                     PR4             equ	1046	;# 
  1170     0417                     T4CON           equ	1047	;# 
  1171     041C                     TMR6            equ	1052	;# 
  1172     041D                     PR6             equ	1053	;# 
  1173     041E                     T6CON           equ	1054	;# 
  1174     0FE4                     STATUS_SHAD     equ	4068	;# 
  1175     0FE5                     WREG_SHAD       equ	4069	;# 
  1176     0FE6                     BSR_SHAD        equ	4070	;# 
  1177     0FE7                     PCLATH_SHAD     equ	4071	;# 
  1178     0FE8                     FSR0L_SHAD      equ	4072	;# 
  1179     0FE9                     FSR0H_SHAD      equ	4073	;# 
  1180     0FEA                     FSR1L_SHAD      equ	4074	;# 
  1181     0FEB                     FSR1H_SHAD      equ	4075	;# 
  1182     0FED                     STKPTR          equ	4077	;# 
  1183     0FEE                     TOSL            equ	4078	;# 
  1184     0FEF                     TOSH            equ	4079	;# 
  1185     0000                     INDF0           equ	0	;# 
  1186     0001                     INDF1           equ	1	;# 
  1187     0002                     PCL             equ	2	;# 
  1188     0003                     STATUS          equ	3	;# 
  1189     0004                     FSR0L           equ	4	;# 
  1190     0005                     FSR0H           equ	5	;# 
  1191     0006                     FSR1L           equ	6	;# 
  1192     0007                     FSR1H           equ	7	;# 
  1193     0008                     BSR             equ	8	;# 
  1194     0009                     WREG            equ	9	;# 
  1195     000A                     PCLATH          equ	10	;# 
  1196     000B                     INTCON          equ	11	;# 
  1197     000C                     PORTA           equ	12	;# 
  1198     000D                     PORTB           equ	13	;# 
  1199     0011                     PIR1            equ	17	;# 
  1200     0012                     PIR2            equ	18	;# 
  1201     0013                     PIR3            equ	19	;# 
  1202     0014                     PIR4            equ	20	;# 
  1203     0015                     TMR0            equ	21	;# 
  1204     0016                     TMR1            equ	22	;# 
  1205     0016                     TMR1L           equ	22	;# 
  1206     0017                     TMR1H           equ	23	;# 
  1207     0018                     T1CON           equ	24	;# 
  1208     0019                     T1GCON          equ	25	;# 
  1209     001A                     TMR2            equ	26	;# 
  1210     001B                     PR2             equ	27	;# 
  1211     001C                     T2CON           equ	28	;# 
  1212     001E                     CPSCON0         equ	30	;# 
  1213     001F                     CPSCON1         equ	31	;# 
  1214     008C                     TRISA           equ	140	;# 
  1215     008D                     TRISB           equ	141	;# 
  1216     0091                     PIE1            equ	145	;# 
  1217     0092                     PIE2            equ	146	;# 
  1218     0093                     PIE3            equ	147	;# 
  1219     0094                     PIE4            equ	148	;# 
  1220     0095                     OPTION_REG      equ	149	;# 
  1221     0096                     PCON            equ	150	;# 
  1222     0097                     WDTCON          equ	151	;# 
  1223     0098                     OSCTUNE         equ	152	;# 
  1224     0099                     OSCCON          equ	153	;# 
  1225     009A                     OSCSTAT         equ	154	;# 
  1226     009B                     ADRES           equ	155	;# 
  1227     009B                     ADRESL          equ	155	;# 
  1228     009C                     ADRESH          equ	156	;# 
  1229     009D                     ADCON0          equ	157	;# 
  1230     009E                     ADCON1          equ	158	;# 
  1231     010C                     LATA            equ	268	;# 
  1232     010D                     LATB            equ	269	;# 
  1233     0111                     CM1CON0         equ	273	;# 
  1234     0112                     CM1CON1         equ	274	;# 
  1235     0113                     CM2CON0         equ	275	;# 
  1236     0114                     CM2CON1         equ	276	;# 
  1237     0115                     CMOUT           equ	277	;# 
  1238     0116                     BORCON          equ	278	;# 
  1239     0117                     FVRCON          equ	279	;# 
  1240     0118                     DACCON0         equ	280	;# 
  1241     0119                     DACCON1         equ	281	;# 
  1242     011A                     SRCON0          equ	282	;# 
  1243     011B                     SRCON1          equ	283	;# 
  1244     011D                     APFCON0         equ	285	;# 
  1245     011E                     APFCON1         equ	286	;# 
  1246     018C                     ANSELA          equ	396	;# 
  1247     018D                     ANSELB          equ	397	;# 
  1248     0191                     EEADR           equ	401	;# 
  1249     0191                     EEADRL          equ	401	;# 
  1250     0192                     EEADRH          equ	402	;# 
  1251     0193                     EEDAT           equ	403	;# 
  1252     0193                     EEDATL          equ	403	;# 
  1253     0193                     EEDATA          equ	403	;# 
  1254     0194                     EEDATH          equ	404	;# 
  1255     0195                     EECON1          equ	405	;# 
  1256     0196                     EECON2          equ	406	;# 
  1257     0199                     RCREG           equ	409	;# 
  1258     019A                     TXREG           equ	410	;# 
  1259     019B                     SP1BRG          equ	411	;# 
  1260     019B                     SP1BRGL         equ	411	;# 
  1261     019B                     SPBRG           equ	411	;# 
  1262     019B                     SPBRGL          equ	411	;# 
  1263     019C                     SP1BRGH         equ	412	;# 
  1264     019C                     SPBRGH          equ	412	;# 
  1265     019D                     RCSTA           equ	413	;# 
  1266     019E                     TXSTA           equ	414	;# 
  1267     019F                     BAUDCON         equ	415	;# 
  1268     020C                     WPUA            equ	524	;# 
  1269     020D                     WPUB            equ	525	;# 
  1270     0211                     SSP1BUF         equ	529	;# 
  1271     0211                     SSPBUF          equ	529	;# 
  1272     0212                     SSP1ADD         equ	530	;# 
  1273     0212                     SSPADD          equ	530	;# 
  1274     0213                     SSP1MSK         equ	531	;# 
  1275     0213                     SSPMSK          equ	531	;# 
  1276     0214                     SSP1STAT        equ	532	;# 
  1277     0214                     SSPSTAT         equ	532	;# 
  1278     0215                     SSP1CON1        equ	533	;# 
  1279     0215                     SSPCON1         equ	533	;# 
  1280     0215                     SSPCON          equ	533	;# 
  1281     0216                     SSP1CON2        equ	534	;# 
  1282     0216                     SSPCON2         equ	534	;# 
  1283     0217                     SSP1CON3        equ	535	;# 
  1284     0217                     SSPCON3         equ	535	;# 
  1285     0219                     SSP2BUF         equ	537	;# 
  1286     021A                     SSP2ADD         equ	538	;# 
  1287     021B                     SSP2MSK         equ	539	;# 
  1288     021C                     SSP2STAT        equ	540	;# 
  1289     021D                     SSP2CON1        equ	541	;# 
  1290     021E                     SSP2CON2        equ	542	;# 
  1291     021F                     SSP2CON3        equ	543	;# 
  1292     0291                     CCPR1           equ	657	;# 
  1293     0291                     CCPR1L          equ	657	;# 
  1294     0292                     CCPR1H          equ	658	;# 
  1295     0293                     CCP1CON         equ	659	;# 
  1296     0294                     PWM1CON         equ	660	;# 
  1297     0295                     CCP1AS          equ	661	;# 
  1298     0295                     ECCP1AS         equ	661	;# 
  1299     0296                     PSTR1CON        equ	662	;# 
  1300     0298                     CCPR2           equ	664	;# 
  1301     0298                     CCPR2L          equ	664	;# 
  1302     0299                     CCPR2H          equ	665	;# 
  1303     029A                     CCP2CON         equ	666	;# 
  1304     029B                     PWM2CON         equ	667	;# 
  1305     029C                     CCP2AS          equ	668	;# 
  1306     029C                     ECCP2AS         equ	668	;# 
  1307     029D                     PSTR2CON        equ	669	;# 
  1308     029E                     CCPTMRS         equ	670	;# 
  1309     029E                     CCPTMRS0        equ	670	;# 
  1310     0311                     CCPR3           equ	785	;# 
  1311     0311                     CCPR3L          equ	785	;# 
  1312     0312                     CCPR3H          equ	786	;# 
  1313     0313                     CCP3CON         equ	787	;# 
  1314     0318                     CCPR4           equ	792	;# 
  1315     0318                     CCPR4L          equ	792	;# 
  1316     0319                     CCPR4H          equ	793	;# 
  1317     031A                     CCP4CON         equ	794	;# 
  1318     0394                     IOCBP           equ	916	;# 
  1319     0395                     IOCBN           equ	917	;# 
  1320     0396                     IOCBF           equ	918	;# 
  1321     039A                     CLKRCON         equ	922	;# 
  1322     039C                     MDCON           equ	924	;# 
  1323     039D                     MDSRC           equ	925	;# 
  1324     039E                     MDCARL          equ	926	;# 
  1325     039F                     MDCARH          equ	927	;# 
  1326     0415                     TMR4            equ	1045	;# 
  1327     0416                     PR4             equ	1046	;# 
  1328     0417                     T4CON           equ	1047	;# 
  1329     041C                     TMR6            equ	1052	;# 
  1330     041D                     PR6             equ	1053	;# 
  1331     041E                     T6CON           equ	1054	;# 
  1332     0FE4                     STATUS_SHAD     equ	4068	;# 
  1333     0FE5                     WREG_SHAD       equ	4069	;# 
  1334     0FE6                     BSR_SHAD        equ	4070	;# 
  1335     0FE7                     PCLATH_SHAD     equ	4071	;# 
  1336     0FE8                     FSR0L_SHAD      equ	4072	;# 
  1337     0FE9                     FSR0H_SHAD      equ	4073	;# 
  1338     0FEA                     FSR1L_SHAD      equ	4074	;# 
  1339     0FEB                     FSR1H_SHAD      equ	4075	;# 
  1340     0FED                     STKPTR          equ	4077	;# 
  1341     0FEE                     TOSL            equ	4078	;# 
  1342     0FEF                     TOSH            equ	4079	;# 
  1343     0000                     INDF0           equ	0	;# 
  1344     0001                     INDF1           equ	1	;# 
  1345     0002                     PCL             equ	2	;# 
  1346     0003                     STATUS          equ	3	;# 
  1347     0004                     FSR0L           equ	4	;# 
  1348     0005                     FSR0H           equ	5	;# 
  1349     0006                     FSR1L           equ	6	;# 
  1350     0007                     FSR1H           equ	7	;# 
  1351     0008                     BSR             equ	8	;# 
  1352     0009                     WREG            equ	9	;# 
  1353     000A                     PCLATH          equ	10	;# 
  1354     000B                     INTCON          equ	11	;# 
  1355     000C                     PORTA           equ	12	;# 
  1356     000D                     PORTB           equ	13	;# 
  1357     0011                     PIR1            equ	17	;# 
  1358     0012                     PIR2            equ	18	;# 
  1359     0013                     PIR3            equ	19	;# 
  1360     0014                     PIR4            equ	20	;# 
  1361     0015                     TMR0            equ	21	;# 
  1362     0016                     TMR1            equ	22	;# 
  1363     0016                     TMR1L           equ	22	;# 
  1364     0017                     TMR1H           equ	23	;# 
  1365     0018                     T1CON           equ	24	;# 
  1366     0019                     T1GCON          equ	25	;# 
  1367     001A                     TMR2            equ	26	;# 
  1368     001B                     PR2             equ	27	;# 
  1369     001C                     T2CON           equ	28	;# 
  1370     001E                     CPSCON0         equ	30	;# 
  1371     001F                     CPSCON1         equ	31	;# 
  1372     008C                     TRISA           equ	140	;# 
  1373     008D                     TRISB           equ	141	;# 
  1374     0091                     PIE1            equ	145	;# 
  1375     0092                     PIE2            equ	146	;# 
  1376     0093                     PIE3            equ	147	;# 
  1377     0094                     PIE4            equ	148	;# 
  1378     0095                     OPTION_REG      equ	149	;# 
  1379     0096                     PCON            equ	150	;# 
  1380     0097                     WDTCON          equ	151	;# 
  1381     0098                     OSCTUNE         equ	152	;# 
  1382     0099                     OSCCON          equ	153	;# 
  1383     009A                     OSCSTAT         equ	154	;# 
  1384     009B                     ADRES           equ	155	;# 
  1385     009B                     ADRESL          equ	155	;# 
  1386     009C                     ADRESH          equ	156	;# 
  1387     009D                     ADCON0          equ	157	;# 
  1388     009E                     ADCON1          equ	158	;# 
  1389     010C                     LATA            equ	268	;# 
  1390     010D                     LATB            equ	269	;# 
  1391     0111                     CM1CON0         equ	273	;# 
  1392     0112                     CM1CON1         equ	274	;# 
  1393     0113                     CM2CON0         equ	275	;# 
  1394     0114                     CM2CON1         equ	276	;# 
  1395     0115                     CMOUT           equ	277	;# 
  1396     0116                     BORCON          equ	278	;# 
  1397     0117                     FVRCON          equ	279	;# 
  1398     0118                     DACCON0         equ	280	;# 
  1399     0119                     DACCON1         equ	281	;# 
  1400     011A                     SRCON0          equ	282	;# 
  1401     011B                     SRCON1          equ	283	;# 
  1402     011D                     APFCON0         equ	285	;# 
  1403     011E                     APFCON1         equ	286	;# 
  1404     018C                     ANSELA          equ	396	;# 
  1405     018D                     ANSELB          equ	397	;# 
  1406     0191                     EEADR           equ	401	;# 
  1407     0191                     EEADRL          equ	401	;# 
  1408     0192                     EEADRH          equ	402	;# 
  1409     0193                     EEDAT           equ	403	;# 
  1410     0193                     EEDATL          equ	403	;# 
  1411     0193                     EEDATA          equ	403	;# 
  1412     0194                     EEDATH          equ	404	;# 
  1413     0195                     EECON1          equ	405	;# 
  1414     0196                     EECON2          equ	406	;# 
  1415     0199                     RCREG           equ	409	;# 
  1416     019A                     TXREG           equ	410	;# 
  1417     019B                     SP1BRG          equ	411	;# 
  1418     019B                     SP1BRGL         equ	411	;# 
  1419     019B                     SPBRG           equ	411	;# 
  1420     019B                     SPBRGL          equ	411	;# 
  1421     019C                     SP1BRGH         equ	412	;# 
  1422     019C                     SPBRGH          equ	412	;# 
  1423     019D                     RCSTA           equ	413	;# 
  1424     019E                     TXSTA           equ	414	;# 
  1425     019F                     BAUDCON         equ	415	;# 
  1426     020C                     WPUA            equ	524	;# 
  1427     020D                     WPUB            equ	525	;# 
  1428     0211                     SSP1BUF         equ	529	;# 
  1429     0211                     SSPBUF          equ	529	;# 
  1430     0212                     SSP1ADD         equ	530	;# 
  1431     0212                     SSPADD          equ	530	;# 
  1432     0213                     SSP1MSK         equ	531	;# 
  1433     0213                     SSPMSK          equ	531	;# 
  1434     0214                     SSP1STAT        equ	532	;# 
  1435     0214                     SSPSTAT         equ	532	;# 
  1436     0215                     SSP1CON1        equ	533	;# 
  1437     0215                     SSPCON1         equ	533	;# 
  1438     0215                     SSPCON          equ	533	;# 
  1439     0216                     SSP1CON2        equ	534	;# 
  1440     0216                     SSPCON2         equ	534	;# 
  1441     0217                     SSP1CON3        equ	535	;# 
  1442     0217                     SSPCON3         equ	535	;# 
  1443     0219                     SSP2BUF         equ	537	;# 
  1444     021A                     SSP2ADD         equ	538	;# 
  1445     021B                     SSP2MSK         equ	539	;# 
  1446     021C                     SSP2STAT        equ	540	;# 
  1447     021D                     SSP2CON1        equ	541	;# 
  1448     021E                     SSP2CON2        equ	542	;# 
  1449     021F                     SSP2CON3        equ	543	;# 
  1450     0291                     CCPR1           equ	657	;# 
  1451     0291                     CCPR1L          equ	657	;# 
  1452     0292                     CCPR1H          equ	658	;# 
  1453     0293                     CCP1CON         equ	659	;# 
  1454     0294                     PWM1CON         equ	660	;# 
  1455     0295                     CCP1AS          equ	661	;# 
  1456     0295                     ECCP1AS         equ	661	;# 
  1457     0296                     PSTR1CON        equ	662	;# 
  1458     0298                     CCPR2           equ	664	;# 
  1459     0298                     CCPR2L          equ	664	;# 
  1460     0299                     CCPR2H          equ	665	;# 
  1461     029A                     CCP2CON         equ	666	;# 
  1462     029B                     PWM2CON         equ	667	;# 
  1463     029C                     CCP2AS          equ	668	;# 
  1464     029C                     ECCP2AS         equ	668	;# 
  1465     029D                     PSTR2CON        equ	669	;# 
  1466     029E                     CCPTMRS         equ	670	;# 
  1467     029E                     CCPTMRS0        equ	670	;# 
  1468     0311                     CCPR3           equ	785	;# 
  1469     0311                     CCPR3L          equ	785	;# 
  1470     0312                     CCPR3H          equ	786	;# 
  1471     0313                     CCP3CON         equ	787	;# 
  1472     0318                     CCPR4           equ	792	;# 
  1473     0318                     CCPR4L          equ	792	;# 
  1474     0319                     CCPR4H          equ	793	;# 
  1475     031A                     CCP4CON         equ	794	;# 
  1476     0394                     IOCBP           equ	916	;# 
  1477     0395                     IOCBN           equ	917	;# 
  1478     0396                     IOCBF           equ	918	;# 
  1479     039A                     CLKRCON         equ	922	;# 
  1480     039C                     MDCON           equ	924	;# 
  1481     039D                     MDSRC           equ	925	;# 
  1482     039E                     MDCARL          equ	926	;# 
  1483     039F                     MDCARH          equ	927	;# 
  1484     0415                     TMR4            equ	1045	;# 
  1485     0416                     PR4             equ	1046	;# 
  1486     0417                     T4CON           equ	1047	;# 
  1487     041C                     TMR6            equ	1052	;# 
  1488     041D                     PR6             equ	1053	;# 
  1489     041E                     T6CON           equ	1054	;# 
  1490     0FE4                     STATUS_SHAD     equ	4068	;# 
  1491     0FE5                     WREG_SHAD       equ	4069	;# 
  1492     0FE6                     BSR_SHAD        equ	4070	;# 
  1493     0FE7                     PCLATH_SHAD     equ	4071	;# 
  1494     0FE8                     FSR0L_SHAD      equ	4072	;# 
  1495     0FE9                     FSR0H_SHAD      equ	4073	;# 
  1496     0FEA                     FSR1L_SHAD      equ	4074	;# 
  1497     0FEB                     FSR1H_SHAD      equ	4075	;# 
  1498     0FED                     STKPTR          equ	4077	;# 
  1499     0FEE                     TOSL            equ	4078	;# 
  1500     0FEF                     TOSH            equ	4079	;# 
  1501     0000                     INDF0           equ	0	;# 
  1502     0001                     INDF1           equ	1	;# 
  1503     0002                     PCL             equ	2	;# 
  1504     0003                     STATUS          equ	3	;# 
  1505     0004                     FSR0L           equ	4	;# 
  1506     0005                     FSR0H           equ	5	;# 
  1507     0006                     FSR1L           equ	6	;# 
  1508     0007                     FSR1H           equ	7	;# 
  1509     0008                     BSR             equ	8	;# 
  1510     0009                     WREG            equ	9	;# 
  1511     000A                     PCLATH          equ	10	;# 
  1512     000B                     INTCON          equ	11	;# 
  1513     000C                     PORTA           equ	12	;# 
  1514     000D                     PORTB           equ	13	;# 
  1515     0011                     PIR1            equ	17	;# 
  1516     0012                     PIR2            equ	18	;# 
  1517     0013                     PIR3            equ	19	;# 
  1518     0014                     PIR4            equ	20	;# 
  1519     0015                     TMR0            equ	21	;# 
  1520     0016                     TMR1            equ	22	;# 
  1521     0016                     TMR1L           equ	22	;# 
  1522     0017                     TMR1H           equ	23	;# 
  1523     0018                     T1CON           equ	24	;# 
  1524     0019                     T1GCON          equ	25	;# 
  1525     001A                     TMR2            equ	26	;# 
  1526     001B                     PR2             equ	27	;# 
  1527     001C                     T2CON           equ	28	;# 
  1528     001E                     CPSCON0         equ	30	;# 
  1529     001F                     CPSCON1         equ	31	;# 
  1530     008C                     TRISA           equ	140	;# 
  1531     008D                     TRISB           equ	141	;# 
  1532     0091                     PIE1            equ	145	;# 
  1533     0092                     PIE2            equ	146	;# 
  1534     0093                     PIE3            equ	147	;# 
  1535     0094                     PIE4            equ	148	;# 
  1536     0095                     OPTION_REG      equ	149	;# 
  1537     0096                     PCON            equ	150	;# 
  1538     0097                     WDTCON          equ	151	;# 
  1539     0098                     OSCTUNE         equ	152	;# 
  1540     0099                     OSCCON          equ	153	;# 
  1541     009A                     OSCSTAT         equ	154	;# 
  1542     009B                     ADRES           equ	155	;# 
  1543     009B                     ADRESL          equ	155	;# 
  1544     009C                     ADRESH          equ	156	;# 
  1545     009D                     ADCON0          equ	157	;# 
  1546     009E                     ADCON1          equ	158	;# 
  1547     010C                     LATA            equ	268	;# 
  1548     010D                     LATB            equ	269	;# 
  1549     0111                     CM1CON0         equ	273	;# 
  1550     0112                     CM1CON1         equ	274	;# 
  1551     0113                     CM2CON0         equ	275	;# 
  1552     0114                     CM2CON1         equ	276	;# 
  1553     0115                     CMOUT           equ	277	;# 
  1554     0116                     BORCON          equ	278	;# 
  1555     0117                     FVRCON          equ	279	;# 
  1556     0118                     DACCON0         equ	280	;# 
  1557     0119                     DACCON1         equ	281	;# 
  1558     011A                     SRCON0          equ	282	;# 
  1559     011B                     SRCON1          equ	283	;# 
  1560     011D                     APFCON0         equ	285	;# 
  1561     011E                     APFCON1         equ	286	;# 
  1562     018C                     ANSELA          equ	396	;# 
  1563     018D                     ANSELB          equ	397	;# 
  1564     0191                     EEADR           equ	401	;# 
  1565     0191                     EEADRL          equ	401	;# 
  1566     0192                     EEADRH          equ	402	;# 
  1567     0193                     EEDAT           equ	403	;# 
  1568     0193                     EEDATL          equ	403	;# 
  1569     0193                     EEDATA          equ	403	;# 
  1570     0194                     EEDATH          equ	404	;# 
  1571     0195                     EECON1          equ	405	;# 
  1572     0196                     EECON2          equ	406	;# 
  1573     0199                     RCREG           equ	409	;# 
  1574     019A                     TXREG           equ	410	;# 
  1575     019B                     SP1BRG          equ	411	;# 
  1576     019B                     SP1BRGL         equ	411	;# 
  1577     019B                     SPBRG           equ	411	;# 
  1578     019B                     SPBRGL          equ	411	;# 
  1579     019C                     SP1BRGH         equ	412	;# 
  1580     019C                     SPBRGH          equ	412	;# 
  1581     019D                     RCSTA           equ	413	;# 
  1582     019E                     TXSTA           equ	414	;# 
  1583     019F                     BAUDCON         equ	415	;# 
  1584     020C                     WPUA            equ	524	;# 
  1585     020D                     WPUB            equ	525	;# 
  1586     0211                     SSP1BUF         equ	529	;# 
  1587     0211                     SSPBUF          equ	529	;# 
  1588     0212                     SSP1ADD         equ	530	;# 
  1589     0212                     SSPADD          equ	530	;# 
  1590     0213                     SSP1MSK         equ	531	;# 
  1591     0213                     SSPMSK          equ	531	;# 
  1592     0214                     SSP1STAT        equ	532	;# 
  1593     0214                     SSPSTAT         equ	532	;# 
  1594     0215                     SSP1CON1        equ	533	;# 
  1595     0215                     SSPCON1         equ	533	;# 
  1596     0215                     SSPCON          equ	533	;# 
  1597     0216                     SSP1CON2        equ	534	;# 
  1598     0216                     SSPCON2         equ	534	;# 
  1599     0217                     SSP1CON3        equ	535	;# 
  1600     0217                     SSPCON3         equ	535	;# 
  1601     0219                     SSP2BUF         equ	537	;# 
  1602     021A                     SSP2ADD         equ	538	;# 
  1603     021B                     SSP2MSK         equ	539	;# 
  1604     021C                     SSP2STAT        equ	540	;# 
  1605     021D                     SSP2CON1        equ	541	;# 
  1606     021E                     SSP2CON2        equ	542	;# 
  1607     021F                     SSP2CON3        equ	543	;# 
  1608     0291                     CCPR1           equ	657	;# 
  1609     0291                     CCPR1L          equ	657	;# 
  1610     0292                     CCPR1H          equ	658	;# 
  1611     0293                     CCP1CON         equ	659	;# 
  1612     0294                     PWM1CON         equ	660	;# 
  1613     0295                     CCP1AS          equ	661	;# 
  1614     0295                     ECCP1AS         equ	661	;# 
  1615     0296                     PSTR1CON        equ	662	;# 
  1616     0298                     CCPR2           equ	664	;# 
  1617     0298                     CCPR2L          equ	664	;# 
  1618     0299                     CCPR2H          equ	665	;# 
  1619     029A                     CCP2CON         equ	666	;# 
  1620     029B                     PWM2CON         equ	667	;# 
  1621     029C                     CCP2AS          equ	668	;# 
  1622     029C                     ECCP2AS         equ	668	;# 
  1623     029D                     PSTR2CON        equ	669	;# 
  1624     029E                     CCPTMRS         equ	670	;# 
  1625     029E                     CCPTMRS0        equ	670	;# 
  1626     0311                     CCPR3           equ	785	;# 
  1627     0311                     CCPR3L          equ	785	;# 
  1628     0312                     CCPR3H          equ	786	;# 
  1629     0313                     CCP3CON         equ	787	;# 
  1630     0318                     CCPR4           equ	792	;# 
  1631     0318                     CCPR4L          equ	792	;# 
  1632     0319                     CCPR4H          equ	793	;# 
  1633     031A                     CCP4CON         equ	794	;# 
  1634     0394                     IOCBP           equ	916	;# 
  1635     0395                     IOCBN           equ	917	;# 
  1636     0396                     IOCBF           equ	918	;# 
  1637     039A                     CLKRCON         equ	922	;# 
  1638     039C                     MDCON           equ	924	;# 
  1639     039D                     MDSRC           equ	925	;# 
  1640     039E                     MDCARL          equ	926	;# 
  1641     039F                     MDCARH          equ	927	;# 
  1642     0415                     TMR4            equ	1045	;# 
  1643     0416                     PR4             equ	1046	;# 
  1644     0417                     T4CON           equ	1047	;# 
  1645     041C                     TMR6            equ	1052	;# 
  1646     041D                     PR6             equ	1053	;# 
  1647     041E                     T6CON           equ	1054	;# 
  1648     0FE4                     STATUS_SHAD     equ	4068	;# 
  1649     0FE5                     WREG_SHAD       equ	4069	;# 
  1650     0FE6                     BSR_SHAD        equ	4070	;# 
  1651     0FE7                     PCLATH_SHAD     equ	4071	;# 
  1652     0FE8                     FSR0L_SHAD      equ	4072	;# 
  1653     0FE9                     FSR0H_SHAD      equ	4073	;# 
  1654     0FEA                     FSR1L_SHAD      equ	4074	;# 
  1655     0FEB                     FSR1H_SHAD      equ	4075	;# 
  1656     0FED                     STKPTR          equ	4077	;# 
  1657     0FEE                     TOSL            equ	4078	;# 
  1658     0FEF                     TOSH            equ	4079	;# 
  1659                           
  1660                           	psect	nvCOMMON
  1661     007A                     __pnvCOMMON:
  1662     007A                     _dutyCicle:
  1663     007A                     	ds	2
  1664                           
  1665                           	psect	nvBANK0
  1666     0020                     __pnvBANK0:
  1667     0020                     _TMR1_InterruptHandler:
  1668     0020                     	ds	2
  1669     000B                     _INTCONbits     set	11
  1670     001C                     _T2CONbits      set	28
  1671     001C                     _T2CON          set	28
  1672     001A                     _TMR2           set	26
  1673     001B                     _PR2            set	27
  1674     0019                     _T1GCONbits     set	25
  1675     0018                     _T1CONbits      set	24
  1676     0018                     _T1CON          set	24
  1677     0011                     _PIR1bits       set	17
  1678     0016                     _TMR1L          set	22
  1679     0017                     _TMR1H          set	23
  1680     0019                     _T1GCON         set	25
  1681     0095                     _OPTION_REGbits set	149
  1682     008D                     _TRISB          set	141
  1683     008C                     _TRISA          set	140
  1684     009D                     _ADCON0bits     set	157
  1685     009D                     _ADCON0         set	157
  1686     009C                     _ADRESH         set	156
  1687     009B                     _ADRESL         set	155
  1688     009E                     _ADCON1         set	158
  1689     0097                     _WDTCON         set	151
  1690     0098                     _OSCTUNE        set	152
  1691     0099                     _OSCCON         set	153
  1692     0091                     _PIE1bits       set	145
  1693     011E                     _APFCON1        set	286
  1694     011D                     _APFCON0        set	285
  1695     010D                     _LATB           set	269
  1696     010C                     _LATA           set	268
  1697     0116                     _BORCON         set	278
  1698     0117                     _FVRCONbits     set	279
  1699     0117                     _FVRCON         set	279
  1700     018C                     _ANSELA         set	396
  1701     018D                     _ANSELB         set	397
  1702     020C                     _WPUA           set	524
  1703     020D                     _WPUB           set	525
  1704     029E                     _CCPTMRS0bits   set	670
  1705     0298                     _CCPR2L         set	664
  1706     0299                     _CCPR2H         set	665
  1707     029D                     _PSTR2CON       set	669
  1708     029B                     _PWM2CON        set	667
  1709     029C                     _ECCP2AS        set	668
  1710     029A                     _CCP2CON        set	666
  1711                           
  1712                           	psect	cinit
  1713     001F                     start_initialization:	
  1714                           ; #config settings
  1715                           
  1716     001F                     __initialization:
  1717                           
  1718                           ; Clear objects allocated to COMMON
  1719     001F  01F0               	clrf	__pbssCOMMON& (0+127)
  1720     0020  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  1721     0021  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  1722     0022  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  1723     0023  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  1724     0024  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  1725     0025                     end_of_initialization:	
  1726                           ;End of C runtime variable initialization code
  1727                           
  1728     0025                     __end_of__initialization:
  1729     0025  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1730     0026  0020               	movlb	0
  1731     0027  3180  2889         	ljmp	_main	;jump to C main() function
  1732                           
  1733                           	psect	bssCOMMON
  1734     0070                     __pbssCOMMON:
  1735     0070                     _currentDuty:
  1736     0070                     	ds	2
  1737     0072                     _ADC_InterruptHandler:
  1738     0072                     	ds	2
  1739     0074                     _timer1ReloadVal:
  1740     0074                     	ds	2
  1741                           
  1742                           	psect	cstackCOMMON
  1743     0076                     __pcstackCOMMON:
  1744     0076                     ?_TMR1_DefaultInterruptHandler:
  1745     0076                     ?_PIN_MANAGER_Initialize:	
  1746                           ; 1 bytes @ 0x0
  1747                           
  1748     0076                     ?_OSCILLATOR_Initialize:	
  1749                           ; 1 bytes @ 0x0
  1750                           
  1751     0076                     ?_WDT_Initialize:	
  1752                           ; 1 bytes @ 0x0
  1753                           
  1754     0076                     ?_EPWM2_Initialize:	
  1755                           ; 1 bytes @ 0x0
  1756                           
  1757     0076                     ?_ADC_Initialize:	
  1758                           ; 1 bytes @ 0x0
  1759                           
  1760     0076                     ?_TMR2_Initialize:	
  1761                           ; 1 bytes @ 0x0
  1762                           
  1763     0076                     ?_FVR_Initialize:	
  1764                           ; 1 bytes @ 0x0
  1765                           
  1766     0076                     ?_TMR1_Initialize:	
  1767                           ; 1 bytes @ 0x0
  1768                           
  1769     0076                     ?_TMR1_WriteTimer:	
  1770                           ; 1 bytes @ 0x0
  1771                           
  1772     0076                     ?_TMR1_ISR:	
  1773                           ; 1 bytes @ 0x0
  1774                           
  1775     0076                     ?_SYSTEM_Initialize:	
  1776                           ; 1 bytes @ 0x0
  1777                           
  1778     0076                     ?_INTERRUPT_InterruptManager:	
  1779                           ; 1 bytes @ 0x0
  1780                           
  1781     0076                     ?_rampDutyCicle:	
  1782                           ; 1 bytes @ 0x0
  1783                           
  1784     0076                     ?_main:	
  1785                           ; 1 bytes @ 0x0
  1786                           
  1787     0076                     TMR1_WriteTimer@timerVal:	
  1788                           ; 2 bytes @ 0x0
  1789                           
  1790     0076                     rampDutyCicle@dif:	
  1791                           ; 2 bytes @ 0x0
  1792                           
  1793     0076                     ??_TMR1_DefaultInterruptHandler:	
  1794                           ; 2 bytes @ 0x0
  1795                           
  1796     0076                     ??_rampDutyCicle:	
  1797                           ; 1 bytes @ 0x0
  1798                           
  1799                           
  1800                           ; 1 bytes @ 0x0
  1801     0076                     	ds	2
  1802     0078                     ?_TMR1_SetInterruptHandler:
  1803     0078                     ?_EPWM2_LoadDutyValue:	
  1804                           ; 1 bytes @ 0x2
  1805                           
  1806     0078                     ?_ADC_GetConversion:	
  1807                           ; 1 bytes @ 0x2
  1808                           
  1809     0078                     TMR1_SetInterruptHandler@InterruptHandler:	
  1810                           ; 2 bytes @ 0x2
  1811                           
  1812     0078                     EPWM2_LoadDutyValue@dutyValue:	
  1813                           ; 2 bytes @ 0x2
  1814                           
  1815     0078                     ??_PIN_MANAGER_Initialize:	
  1816                           ; 2 bytes @ 0x2
  1817                           
  1818     0078                     ??_OSCILLATOR_Initialize:	
  1819                           ; 1 bytes @ 0x2
  1820                           
  1821     0078                     ??_WDT_Initialize:	
  1822                           ; 1 bytes @ 0x2
  1823                           
  1824     0078                     ??_EPWM2_Initialize:	
  1825                           ; 1 bytes @ 0x2
  1826                           
  1827     0078                     ??_ADC_Initialize:	
  1828                           ; 1 bytes @ 0x2
  1829                           
  1830     0078                     ??_TMR2_Initialize:	
  1831                           ; 1 bytes @ 0x2
  1832                           
  1833     0078                     ??_FVR_Initialize:	
  1834                           ; 1 bytes @ 0x2
  1835                           
  1836     0078                     ??_TMR1_WriteTimer:	
  1837                           ; 1 bytes @ 0x2
  1838                           
  1839     0078                     ??_TMR1_ISR:	
  1840                           ; 1 bytes @ 0x2
  1841                           
  1842     0078                     ??_INTERRUPT_InterruptManager:	
  1843                           ; 1 bytes @ 0x2
  1844                           
  1845                           
  1846                           ; 1 bytes @ 0x2
  1847     0078                     	ds	2
  1848     007A                     ??_TMR1_SetInterruptHandler:
  1849     007A                     ??_TMR1_Initialize:	
  1850                           ; 1 bytes @ 0x4
  1851                           
  1852     007A                     ??_SYSTEM_Initialize:	
  1853                           ; 1 bytes @ 0x4
  1854                           
  1855     007A                     ??_main:	
  1856                           ; 1 bytes @ 0x4
  1857                           
  1858                           
  1859                           	psect	cstackBANK0
  1860     0022                     __pcstackBANK0:	
  1861                           ; 1 bytes @ 0x4
  1862                           
  1863     0022                     ??_ADC_GetConversion:
  1864     0022                     ??_EPWM2_LoadDutyValue:	
  1865                           ; 1 bytes @ 0x0
  1866                           
  1867                           
  1868                           ; 1 bytes @ 0x0
  1869     0022                     	ds	1
  1870     0023                     ADC_GetConversion@channel:
  1871                           
  1872                           ; 1 bytes @ 0x1
  1873     0023                     	ds	1
  1874                           
  1875                           	psect	maintext
  1876     0089                     __pmaintext:	
  1877 ;;
  1878 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1879 ;;
  1880 ;; *************** function _main *****************
  1881 ;; Defined at:
  1882 ;;		line 67 in file "main.c"
  1883 ;; Parameters:    Size  Location     Type
  1884 ;;		None
  1885 ;; Auto vars:     Size  Location     Type
  1886 ;;		None
  1887 ;; Return value:  Size  Location     Type
  1888 ;;                  2  266[None  ] int 
  1889 ;; Registers used:
  1890 ;;		wreg, status,2, status,0, pclath, cstack
  1891 ;; Tracked objects:
  1892 ;;		On entry : B1F/0
  1893 ;;		On exit  : 0/0
  1894 ;;		Unchanged: 0/0
  1895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1896 ;;      Params:         0       0       0       0       0       0
  1897 ;;      Locals:         0       0       0       0       0       0
  1898 ;;      Temps:          0       0       0       0       0       0
  1899 ;;      Totals:         0       0       0       0       0       0
  1900 ;;Total ram usage:        0 bytes
  1901 ;; Hardware stack levels required when called: 6
  1902 ;; This function calls:
  1903 ;;		_ADC_GetConversion
  1904 ;;		_EPWM2_LoadDutyValue
  1905 ;;		_SYSTEM_Initialize
  1906 ;;		_TMR1_SetInterruptHandler
  1907 ;; This function is called by:
  1908 ;;		Startup code after reset
  1909 ;; This function uses a non-reentrant model
  1910 ;;
  1911                           
  1912     0089                     _main:	
  1913                           ;psect for function _main
  1914                           
  1915     0089                     l1152:	
  1916                           ;incstack = 0
  1917                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  1918                           
  1919                           
  1920                           ;main.c: 69:     SYSTEM_Initialize();
  1921     0089  3180  20E8  3180   	fcall	_SYSTEM_Initialize
  1922                           
  1923                           ;main.c: 71:     TMR1_SetInterruptHandler(rampDutyCicle);
  1924     008C  3029               	movlw	low _rampDutyCicle
  1925     008D  00F8               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  1926     008E  3000               	movlw	high _rampDutyCicle
  1927     008F  00F9               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  1928     0090  3181  217D  3180   	fcall	_TMR1_SetInterruptHandler
  1929                           
  1930                           ;main.c: 73:     dutyCicle = ADC_GetConversion(channel_AN1);
  1931     0093  3001               	movlw	1
  1932     0094  3180  20AF  3180   	fcall	_ADC_GetConversion
  1933     0097  0879               	movf	?_ADC_GetConversion+1,w
  1934     0098  00FB               	movwf	_dutyCicle+1
  1935     0099  0878               	movf	?_ADC_GetConversion,w
  1936     009A  00FA               	movwf	_dutyCicle
  1937     009B                     l1154:
  1938                           
  1939                           ;main.c: 76:     (INTCONbits.GIE = 1);
  1940     009B  178B               	bsf	11,7	;volatile
  1941     009C                     l1156:
  1942                           
  1943                           ;main.c: 79:     (INTCONbits.PEIE = 1);
  1944     009C  170B               	bsf	11,6	;volatile
  1945     009D                     l267:	
  1946                           ;main.c: 81:     while (1)
  1947                           
  1948                           
  1949                           ;main.c: 82:     {;main.c: 83:         dutyCicle = ADC_GetConversion(channel_AN1);
  1950     009D  3001               	movlw	1
  1951     009E  3180  20AF  3180   	fcall	_ADC_GetConversion
  1952     00A1  0879               	movf	?_ADC_GetConversion+1,w
  1953     00A2  00FB               	movwf	_dutyCicle+1
  1954     00A3  0878               	movf	?_ADC_GetConversion,w
  1955     00A4  00FA               	movwf	_dutyCicle
  1956                           
  1957                           ;main.c: 84:         EPWM2_LoadDutyValue(currentDuty);
  1958     00A5  0871               	movf	_currentDuty+1,w
  1959     00A6  00F9               	movwf	EPWM2_LoadDutyValue@dutyValue+1
  1960     00A7  0870               	movf	_currentDuty,w
  1961     00A8  00F8               	movwf	EPWM2_LoadDutyValue@dutyValue
  1962     00A9  3180  20CC  3180   	fcall	_EPWM2_LoadDutyValue
  1963     00AC  289D               	goto	l267
  1964     00AD  3180  281D         	ljmp	start
  1965     00AF                     __end_of_main:
  1966                           
  1967                           	psect	text1
  1968     00E8                     __ptext1:	
  1969 ;; *************** function _SYSTEM_Initialize *****************
  1970 ;; Defined at:
  1971 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1972 ;; Parameters:    Size  Location     Type
  1973 ;;		None
  1974 ;; Auto vars:     Size  Location     Type
  1975 ;;		None
  1976 ;; Return value:  Size  Location     Type
  1977 ;;                  1    wreg      void 
  1978 ;; Registers used:
  1979 ;;		wreg, status,2, status,0, pclath, cstack
  1980 ;; Tracked objects:
  1981 ;;		On entry : 0/0
  1982 ;;		On exit  : 0/0
  1983 ;;		Unchanged: 0/0
  1984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1985 ;;      Params:         0       0       0       0       0       0
  1986 ;;      Locals:         0       0       0       0       0       0
  1987 ;;      Temps:          0       0       0       0       0       0
  1988 ;;      Totals:         0       0       0       0       0       0
  1989 ;;Total ram usage:        0 bytes
  1990 ;; Hardware stack levels used: 1
  1991 ;; Hardware stack levels required when called: 5
  1992 ;; This function calls:
  1993 ;;		_ADC_Initialize
  1994 ;;		_EPWM2_Initialize
  1995 ;;		_FVR_Initialize
  1996 ;;		_OSCILLATOR_Initialize
  1997 ;;		_PIN_MANAGER_Initialize
  1998 ;;		_TMR1_Initialize
  1999 ;;		_TMR2_Initialize
  2000 ;;		_WDT_Initialize
  2001 ;; This function is called by:
  2002 ;;		_main
  2003 ;; This function uses a non-reentrant model
  2004 ;;
  2005                           
  2006     00E8                     _SYSTEM_Initialize:	
  2007                           ;psect for function _SYSTEM_Initialize
  2008                           
  2009     00E8                     l1098:	
  2010                           ;incstack = 0
  2011                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2012                           
  2013                           
  2014                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  2015     00E8  3181  2119  3180   	fcall	_PIN_MANAGER_Initialize
  2016                           
  2017                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  2018     00EB  3181  2176  3180   	fcall	_OSCILLATOR_Initialize
  2019                           
  2020                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  2021     00EE  3181  2183  3180   	fcall	_WDT_Initialize
  2022                           
  2023                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
  2024     00F1  3181  2187  3180   	fcall	_FVR_Initialize
  2025     00F4                     l1100:
  2026                           
  2027                           ;mcc_generated_files/mcc.c: 57:     EPWM2_Initialize();
  2028     00F4  3181  2158  3180   	fcall	_EPWM2_Initialize
  2029     00F7                     l1102:
  2030                           
  2031                           ;mcc_generated_files/mcc.c: 58:     ADC_Initialize();
  2032     00F7  3181  216E  3180   	fcall	_ADC_Initialize
  2033     00FA                     l1104:
  2034                           
  2035                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
  2036     00FA  3181  2166  3180   	fcall	_TMR2_Initialize
  2037     00FD                     l1106:
  2038                           
  2039                           ;mcc_generated_files/mcc.c: 60:     TMR1_Initialize();
  2040     00FD  3181  2101  3180   	fcall	_TMR1_Initialize
  2041     0100                     l97:
  2042     0100  0008               	return
  2043     0101                     __end_of_SYSTEM_Initialize:
  2044                           
  2045                           	psect	text2
  2046     0183                     __ptext2:	
  2047 ;; *************** function _WDT_Initialize *****************
  2048 ;; Defined at:
  2049 ;;		line 73 in file "mcc_generated_files/mcc.c"
  2050 ;; Parameters:    Size  Location     Type
  2051 ;;		None
  2052 ;; Auto vars:     Size  Location     Type
  2053 ;;		None
  2054 ;; Return value:  Size  Location     Type
  2055 ;;                  1    wreg      void 
  2056 ;; Registers used:
  2057 ;;		None
  2058 ;; Tracked objects:
  2059 ;;		On entry : 0/0
  2060 ;;		On exit  : 0/0
  2061 ;;		Unchanged: 0/0
  2062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2063 ;;      Params:         0       0       0       0       0       0
  2064 ;;      Locals:         0       0       0       0       0       0
  2065 ;;      Temps:          0       0       0       0       0       0
  2066 ;;      Totals:         0       0       0       0       0       0
  2067 ;;Total ram usage:        0 bytes
  2068 ;; Hardware stack levels used: 1
  2069 ;; Hardware stack levels required when called: 3
  2070 ;; This function calls:
  2071 ;;		Nothing
  2072 ;; This function is called by:
  2073 ;;		_SYSTEM_Initialize
  2074 ;; This function uses a non-reentrant model
  2075 ;;
  2076                           
  2077     0183                     _WDT_Initialize:	
  2078                           ;psect for function _WDT_Initialize
  2079                           
  2080     0183                     l880:	
  2081                           ;incstack = 0
  2082                           ; Regs used in _WDT_Initialize: []
  2083                           
  2084                           
  2085                           ;mcc_generated_files/mcc.c: 76:     WDTCON = 0x16;
  2086     0183  3016               	movlw	22
  2087     0184  0021               	movlb	1	; select bank1
  2088     0185  0097               	movwf	23	;volatile
  2089     0186                     l103:
  2090     0186  0008               	return
  2091     0187                     __end_of_WDT_Initialize:
  2092                           
  2093                           	psect	text3
  2094     0166                     __ptext3:	
  2095 ;; *************** function _TMR2_Initialize *****************
  2096 ;; Defined at:
  2097 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  2098 ;; Parameters:    Size  Location     Type
  2099 ;;		None
  2100 ;; Auto vars:     Size  Location     Type
  2101 ;;		None
  2102 ;; Return value:  Size  Location     Type
  2103 ;;                  1    wreg      void 
  2104 ;; Registers used:
  2105 ;;		status,2
  2106 ;; Tracked objects:
  2107 ;;		On entry : 0/0
  2108 ;;		On exit  : 0/0
  2109 ;;		Unchanged: 0/0
  2110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2111 ;;      Params:         0       0       0       0       0       0
  2112 ;;      Locals:         0       0       0       0       0       0
  2113 ;;      Temps:          0       0       0       0       0       0
  2114 ;;      Totals:         0       0       0       0       0       0
  2115 ;;Total ram usage:        0 bytes
  2116 ;; Hardware stack levels used: 1
  2117 ;; Hardware stack levels required when called: 3
  2118 ;; This function calls:
  2119 ;;		Nothing
  2120 ;; This function is called by:
  2121 ;;		_SYSTEM_Initialize
  2122 ;; This function uses a non-reentrant model
  2123 ;;
  2124                           
  2125     0166                     _TMR2_Initialize:	
  2126                           ;psect for function _TMR2_Initialize
  2127                           
  2128     0166                     l900:	
  2129                           ;incstack = 0
  2130                           ; Regs used in _TMR2_Initialize: [status,2]
  2131                           
  2132                           
  2133                           ;mcc_generated_files/tmr2.c: 67:     PR2 = 0xFF;
  2134     0166  30FF               	movlw	255
  2135     0167  0020               	movlb	0	; select bank0
  2136     0168  009B               	movwf	27	;volatile
  2137     0169                     l902:
  2138                           
  2139                           ;mcc_generated_files/tmr2.c: 70:     TMR2 = 0x00;
  2140     0169  019A               	clrf	26	;volatile
  2141     016A                     l904:
  2142                           
  2143                           ;mcc_generated_files/tmr2.c: 73:     PIR1bits.TMR2IF = 0;
  2144     016A  1091               	bcf	17,1	;volatile
  2145     016B                     l906:
  2146                           
  2147                           ;mcc_generated_files/tmr2.c: 76:     T2CON = 0x04;
  2148     016B  3004               	movlw	4
  2149     016C  009C               	movwf	28	;volatile
  2150     016D                     l154:
  2151     016D  0008               	return
  2152     016E                     __end_of_TMR2_Initialize:
  2153                           
  2154                           	psect	text4
  2155     0101                     __ptext4:	
  2156 ;; *************** function _TMR1_Initialize *****************
  2157 ;; Defined at:
  2158 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  2159 ;; Parameters:    Size  Location     Type
  2160 ;;		None
  2161 ;; Auto vars:     Size  Location     Type
  2162 ;;		None
  2163 ;; Return value:  Size  Location     Type
  2164 ;;                  1    wreg      void 
  2165 ;; Registers used:
  2166 ;;		wreg, status,2, status,0, pclath, cstack
  2167 ;; Tracked objects:
  2168 ;;		On entry : 0/0
  2169 ;;		On exit  : 0/0
  2170 ;;		Unchanged: 0/0
  2171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2172 ;;      Params:         0       0       0       0       0       0
  2173 ;;      Locals:         0       0       0       0       0       0
  2174 ;;      Temps:          0       0       0       0       0       0
  2175 ;;      Totals:         0       0       0       0       0       0
  2176 ;;Total ram usage:        0 bytes
  2177 ;; Hardware stack levels used: 1
  2178 ;; Hardware stack levels required when called: 4
  2179 ;; This function calls:
  2180 ;;		_TMR1_SetInterruptHandler
  2181 ;; This function is called by:
  2182 ;;		_SYSTEM_Initialize
  2183 ;; This function uses a non-reentrant model
  2184 ;;
  2185                           
  2186     0101                     _TMR1_Initialize:	
  2187                           ;psect for function _TMR1_Initialize
  2188                           
  2189     0101                     l1034:	
  2190                           ;incstack = 0
  2191                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2192                           
  2193                           
  2194                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
  2195     0101  0020               	movlb	0	; select bank0
  2196     0102  0199               	clrf	25	;volatile
  2197     0103                     l1036:
  2198                           
  2199                           ;mcc_generated_files/tmr1.c: 72:     TMR1H = 0xFC;
  2200     0103  30FC               	movlw	252
  2201     0104  0097               	movwf	23	;volatile
  2202     0105                     l1038:
  2203                           
  2204                           ;mcc_generated_files/tmr1.c: 75:     TMR1L = 0x18;
  2205     0105  3018               	movlw	24
  2206     0106  0096               	movwf	22	;volatile
  2207     0107                     l1040:
  2208                           
  2209                           ;mcc_generated_files/tmr1.c: 78:     PIR1bits.TMR1IF = 0;
  2210     0107  1011               	bcf	17,0	;volatile
  2211     0108                     l1042:
  2212                           
  2213                           ;mcc_generated_files/tmr1.c: 81:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  2214     0108  0817               	movf	23,w	;volatile
  2215     0109  00F5               	movwf	_timer1ReloadVal+1	;volatile
  2216     010A  0816               	movf	22,w	;volatile
  2217     010B  00F4               	movwf	_timer1ReloadVal	;volatile
  2218     010C                     l1044:
  2219                           
  2220                           ;mcc_generated_files/tmr1.c: 84:     PIE1bits.TMR1IE = 1;
  2221     010C  0021               	movlb	1	; select bank1
  2222     010D  1411               	bsf	17,0	;volatile
  2223     010E                     l1046:
  2224                           
  2225                           ;mcc_generated_files/tmr1.c: 87:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  2226     010E  308B               	movlw	low _TMR1_DefaultInterruptHandler
  2227     010F  00F8               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  2228     0110  3001               	movlw	high _TMR1_DefaultInterruptHandler
  2229     0111  00F9               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  2230     0112  3181  217D  3181   	fcall	_TMR1_SetInterruptHandler
  2231     0115                     l1048:
  2232                           
  2233                           ;mcc_generated_files/tmr1.c: 90:     T1CON = 0x01;
  2234     0115  3001               	movlw	1
  2235     0116  0020               	movlb	0	; select bank0
  2236     0117  0098               	movwf	24	;volatile
  2237     0118                     l37:
  2238     0118  0008               	return
  2239     0119                     __end_of_TMR1_Initialize:
  2240                           
  2241                           	psect	text5
  2242     017D                     __ptext5:	
  2243 ;; *************** function _TMR1_SetInterruptHandler *****************
  2244 ;; Defined at:
  2245 ;;		line 171 in file "mcc_generated_files/tmr1.c"
  2246 ;; Parameters:    Size  Location     Type
  2247 ;;  InterruptHan    2    2[COMMON] PTR FTN()void 
  2248 ;;		 -> rampDutyCicle(1), TMR1_DefaultInterruptHandler(1), 
  2249 ;; Auto vars:     Size  Location     Type
  2250 ;;		None
  2251 ;; Return value:  Size  Location     Type
  2252 ;;                  1    wreg      void 
  2253 ;; Registers used:
  2254 ;;		wreg
  2255 ;; Tracked objects:
  2256 ;;		On entry : 0/0
  2257 ;;		On exit  : 0/0
  2258 ;;		Unchanged: 0/0
  2259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2260 ;;      Params:         2       0       0       0       0       0
  2261 ;;      Locals:         0       0       0       0       0       0
  2262 ;;      Temps:          0       0       0       0       0       0
  2263 ;;      Totals:         2       0       0       0       0       0
  2264 ;;Total ram usage:        2 bytes
  2265 ;; Hardware stack levels used: 1
  2266 ;; Hardware stack levels required when called: 3
  2267 ;; This function calls:
  2268 ;;		Nothing
  2269 ;; This function is called by:
  2270 ;;		_TMR1_Initialize
  2271 ;;		_main
  2272 ;; This function uses a non-reentrant model
  2273 ;;
  2274                           
  2275     017D                     _TMR1_SetInterruptHandler:	
  2276                           ;psect for function _TMR1_SetInterruptHandler
  2277                           
  2278     017D                     l1032:	
  2279                           ;incstack = 0
  2280                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
  2281                           
  2282                           
  2283                           ;mcc_generated_files/tmr1.c: 172:     TMR1_InterruptHandler = InterruptHandler;
  2284     017D  0879               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
  2285     017E  0020               	movlb	0	; select bank0
  2286     017F  00A1               	movwf	_TMR1_InterruptHandler+1
  2287     0180  0878               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
  2288     0181  00A0               	movwf	_TMR1_InterruptHandler
  2289     0182                     l67:
  2290     0182  0008               	return
  2291     0183                     __end_of_TMR1_SetInterruptHandler:
  2292                           
  2293                           	psect	text6
  2294     0119                     __ptext6:	
  2295 ;; *************** function _PIN_MANAGER_Initialize *****************
  2296 ;; Defined at:
  2297 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  2298 ;; Parameters:    Size  Location     Type
  2299 ;;		None
  2300 ;; Auto vars:     Size  Location     Type
  2301 ;;		None
  2302 ;; Return value:  Size  Location     Type
  2303 ;;                  1    wreg      void 
  2304 ;; Registers used:
  2305 ;;		status,2
  2306 ;; Tracked objects:
  2307 ;;		On entry : 0/0
  2308 ;;		On exit  : 0/0
  2309 ;;		Unchanged: 0/0
  2310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2311 ;;      Params:         0       0       0       0       0       0
  2312 ;;      Locals:         0       0       0       0       0       0
  2313 ;;      Temps:          0       0       0       0       0       0
  2314 ;;      Totals:         0       0       0       0       0       0
  2315 ;;Total ram usage:        0 bytes
  2316 ;; Hardware stack levels used: 1
  2317 ;; Hardware stack levels required when called: 3
  2318 ;; This function calls:
  2319 ;;		Nothing
  2320 ;; This function is called by:
  2321 ;;		_SYSTEM_Initialize
  2322 ;; This function uses a non-reentrant model
  2323 ;;
  2324                           
  2325     0119                     _PIN_MANAGER_Initialize:	
  2326                           ;psect for function _PIN_MANAGER_Initialize
  2327                           
  2328     0119                     l860:	
  2329                           ;incstack = 0
  2330                           ; Regs used in _PIN_MANAGER_Initialize: [status,2]
  2331                           
  2332                           
  2333                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  2334     0119  0022               	movlb	2	; select bank2
  2335     011A  018C               	clrf	12	;volatile
  2336                           
  2337                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  2338     011B  018D               	clrf	13	;volatile
  2339     011C                     l862:
  2340                           
  2341                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0x7F;
  2342     011C  307F               	movlw	127
  2343     011D  0021               	movlb	1	; select bank1
  2344     011E  008C               	movwf	12	;volatile
  2345     011F                     l864:
  2346                           
  2347                           ;mcc_generated_files/pin_manager.c: 67:     TRISB = 0xFF;
  2348     011F  30FF               	movlw	255
  2349     0120  008D               	movwf	13	;volatile
  2350     0121                     l866:
  2351                           
  2352                           ;mcc_generated_files/pin_manager.c: 72:     ANSELB = 0xFE;
  2353     0121  30FE               	movlw	254
  2354     0122  0023               	movlb	3	; select bank3
  2355     0123  008D               	movwf	13	;volatile
  2356     0124                     l868:
  2357                           
  2358                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x1F;
  2359     0124  301F               	movlw	31
  2360     0125  008C               	movwf	12	;volatile
  2361     0126                     l870:
  2362                           
  2363                           ;mcc_generated_files/pin_manager.c: 78:     WPUB = 0xFF;
  2364     0126  30FF               	movlw	255
  2365     0127  0024               	movlb	4	; select bank4
  2366     0128  008D               	movwf	13	;volatile
  2367                           
  2368                           ;mcc_generated_files/pin_manager.c: 79:     WPUA = 0x00;
  2369     0129  018C               	clrf	12	;volatile
  2370     012A                     l872:
  2371                           
  2372                           ;mcc_generated_files/pin_manager.c: 80:     OPTION_REGbits.nWPUEN = 0;
  2373     012A  0021               	movlb	1	; select bank1
  2374     012B  1395               	bcf	21,7	;volatile
  2375     012C                     l874:
  2376                           
  2377                           ;mcc_generated_files/pin_manager.c: 86:     APFCON0 = 0x08;
  2378     012C  3008               	movlw	8
  2379     012D  0022               	movlb	2	; select bank2
  2380     012E  009D               	movwf	29	;volatile
  2381                           
  2382                           ;mcc_generated_files/pin_manager.c: 87:     APFCON1 = 0x00;
  2383     012F  019E               	clrf	30	;volatile
  2384     0130                     l198:
  2385     0130  0008               	return
  2386     0131                     __end_of_PIN_MANAGER_Initialize:
  2387                           
  2388                           	psect	text7
  2389     0176                     __ptext7:	
  2390 ;; *************** function _OSCILLATOR_Initialize *****************
  2391 ;; Defined at:
  2392 ;;		line 63 in file "mcc_generated_files/mcc.c"
  2393 ;; Parameters:    Size  Location     Type
  2394 ;;		None
  2395 ;; Auto vars:     Size  Location     Type
  2396 ;;		None
  2397 ;; Return value:  Size  Location     Type
  2398 ;;                  1    wreg      void 
  2399 ;; Registers used:
  2400 ;;		status,2
  2401 ;; Tracked objects:
  2402 ;;		On entry : 0/0
  2403 ;;		On exit  : 0/0
  2404 ;;		Unchanged: 0/0
  2405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2406 ;;      Params:         0       0       0       0       0       0
  2407 ;;      Locals:         0       0       0       0       0       0
  2408 ;;      Temps:          0       0       0       0       0       0
  2409 ;;      Totals:         0       0       0       0       0       0
  2410 ;;Total ram usage:        0 bytes
  2411 ;; Hardware stack levels used: 1
  2412 ;; Hardware stack levels required when called: 3
  2413 ;; This function calls:
  2414 ;;		Nothing
  2415 ;; This function is called by:
  2416 ;;		_SYSTEM_Initialize
  2417 ;; This function uses a non-reentrant model
  2418 ;;
  2419                           
  2420     0176                     _OSCILLATOR_Initialize:	
  2421                           ;psect for function _OSCILLATOR_Initialize
  2422                           
  2423     0176                     l876:	
  2424                           ;incstack = 0
  2425                           ; Regs used in _OSCILLATOR_Initialize: [status,2]
  2426                           
  2427                           
  2428                           ;mcc_generated_files/mcc.c: 66:     OSCCON = 0x68;
  2429     0176  3068               	movlw	104
  2430     0177  0021               	movlb	1	; select bank1
  2431     0178  0099               	movwf	25	;volatile
  2432     0179                     l878:
  2433                           
  2434                           ;mcc_generated_files/mcc.c: 68:     OSCTUNE = 0x00;
  2435     0179  0198               	clrf	24	;volatile
  2436                           
  2437                           ;mcc_generated_files/mcc.c: 70:     BORCON = 0x00;
  2438     017A  0022               	movlb	2	; select bank2
  2439     017B  0196               	clrf	22	;volatile
  2440     017C                     l100:
  2441     017C  0008               	return
  2442     017D                     __end_of_OSCILLATOR_Initialize:
  2443                           
  2444                           	psect	text8
  2445     0187                     __ptext8:	
  2446 ;; *************** function _FVR_Initialize *****************
  2447 ;; Defined at:
  2448 ;;		line 58 in file "mcc_generated_files/fvr.c"
  2449 ;; Parameters:    Size  Location     Type
  2450 ;;		None
  2451 ;; Auto vars:     Size  Location     Type
  2452 ;;		None
  2453 ;; Return value:  Size  Location     Type
  2454 ;;                  1    wreg      void 
  2455 ;; Registers used:
  2456 ;;		None
  2457 ;; Tracked objects:
  2458 ;;		On entry : 0/0
  2459 ;;		On exit  : 0/0
  2460 ;;		Unchanged: 0/0
  2461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2462 ;;      Params:         0       0       0       0       0       0
  2463 ;;      Locals:         0       0       0       0       0       0
  2464 ;;      Temps:          0       0       0       0       0       0
  2465 ;;      Totals:         0       0       0       0       0       0
  2466 ;;Total ram usage:        0 bytes
  2467 ;; Hardware stack levels used: 1
  2468 ;; Hardware stack levels required when called: 3
  2469 ;; This function calls:
  2470 ;;		Nothing
  2471 ;; This function is called by:
  2472 ;;		_SYSTEM_Initialize
  2473 ;; This function uses a non-reentrant model
  2474 ;;
  2475                           
  2476     0187                     _FVR_Initialize:	
  2477                           ;psect for function _FVR_Initialize
  2478                           
  2479     0187                     l828:	
  2480                           ;incstack = 0
  2481                           ; Regs used in _FVR_Initialize: []
  2482                           
  2483                           
  2484                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0x81;
  2485     0187  3081               	movlw	129
  2486     0188  0022               	movlb	2	; select bank2
  2487     0189  0097               	movwf	23	;volatile
  2488     018A                     l7:
  2489     018A  0008               	return
  2490     018B                     __end_of_FVR_Initialize:
  2491                           
  2492                           	psect	text9
  2493     0158                     __ptext9:	
  2494 ;; *************** function _EPWM2_Initialize *****************
  2495 ;; Defined at:
  2496 ;;		line 64 in file "mcc_generated_files/epwm2.c"
  2497 ;; Parameters:    Size  Location     Type
  2498 ;;		None
  2499 ;; Auto vars:     Size  Location     Type
  2500 ;;		None
  2501 ;; Return value:  Size  Location     Type
  2502 ;;                  1    wreg      void 
  2503 ;; Registers used:
  2504 ;;		wreg, status,2, status,0
  2505 ;; Tracked objects:
  2506 ;;		On entry : 0/0
  2507 ;;		On exit  : 0/0
  2508 ;;		Unchanged: 0/0
  2509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2510 ;;      Params:         0       0       0       0       0       0
  2511 ;;      Locals:         0       0       0       0       0       0
  2512 ;;      Temps:          0       0       0       0       0       0
  2513 ;;      Totals:         0       0       0       0       0       0
  2514 ;;Total ram usage:        0 bytes
  2515 ;; Hardware stack levels used: 1
  2516 ;; Hardware stack levels required when called: 3
  2517 ;; This function calls:
  2518 ;;		Nothing
  2519 ;; This function is called by:
  2520 ;;		_SYSTEM_Initialize
  2521 ;; This function uses a non-reentrant model
  2522 ;;
  2523                           
  2524     0158                     _EPWM2_Initialize:	
  2525                           ;psect for function _EPWM2_Initialize
  2526                           
  2527     0158                     l882:	
  2528                           ;incstack = 0
  2529                           ; Regs used in _EPWM2_Initialize: [wreg+status,2+status,0]
  2530                           
  2531                           
  2532                           ;mcc_generated_files/epwm2.c: 69:  CCP2CON = 0x3C;
  2533     0158  303C               	movlw	60
  2534     0159  0025               	movlb	5	; select bank5
  2535     015A  009A               	movwf	26	;volatile
  2536     015B                     l884:
  2537                           
  2538                           ;mcc_generated_files/epwm2.c: 72:  ECCP2AS = 0x00;
  2539     015B  019C               	clrf	28	;volatile
  2540     015C                     l886:
  2541                           
  2542                           ;mcc_generated_files/epwm2.c: 75:  PWM2CON = 0x80;
  2543     015C  3080               	movlw	128
  2544     015D  009B               	movwf	27	;volatile
  2545     015E                     l888:
  2546                           
  2547                           ;mcc_generated_files/epwm2.c: 78:  PSTR2CON = 0x01;
  2548     015E  3001               	movlw	1
  2549     015F  009D               	movwf	29	;volatile
  2550                           
  2551                           ;mcc_generated_files/epwm2.c: 81:  CCPR2H = 0x00;
  2552     0160  0199               	clrf	25	;volatile
  2553     0161                     l890:
  2554                           
  2555                           ;mcc_generated_files/epwm2.c: 84:  CCPR2L = 0x7F;
  2556     0161  307F               	movlw	127
  2557     0162  0098               	movwf	24	;volatile
  2558     0163                     l892:
  2559                           
  2560                           ;mcc_generated_files/epwm2.c: 87:  CCPTMRS0bits.C2TSEL = 0x0;
  2561     0163  30F3               	movlw	-13
  2562     0164  059E               	andwf	30,f	;volatile
  2563     0165                     l218:
  2564     0165  0008               	return
  2565     0166                     __end_of_EPWM2_Initialize:
  2566                           
  2567                           	psect	text10
  2568     016E                     __ptext10:	
  2569 ;; *************** function _ADC_Initialize *****************
  2570 ;; Defined at:
  2571 ;;		line 67 in file "mcc_generated_files/adc.c"
  2572 ;; Parameters:    Size  Location     Type
  2573 ;;		None
  2574 ;; Auto vars:     Size  Location     Type
  2575 ;;		None
  2576 ;; Return value:  Size  Location     Type
  2577 ;;                  1    wreg      void 
  2578 ;; Registers used:
  2579 ;;		status,2
  2580 ;; Tracked objects:
  2581 ;;		On entry : 0/0
  2582 ;;		On exit  : 0/0
  2583 ;;		Unchanged: 0/0
  2584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2585 ;;      Params:         0       0       0       0       0       0
  2586 ;;      Locals:         0       0       0       0       0       0
  2587 ;;      Temps:          0       0       0       0       0       0
  2588 ;;      Totals:         0       0       0       0       0       0
  2589 ;;Total ram usage:        0 bytes
  2590 ;; Hardware stack levels used: 1
  2591 ;; Hardware stack levels required when called: 3
  2592 ;; This function calls:
  2593 ;;		Nothing
  2594 ;; This function is called by:
  2595 ;;		_SYSTEM_Initialize
  2596 ;; This function uses a non-reentrant model
  2597 ;;
  2598                           
  2599     016E                     _ADC_Initialize:	
  2600                           ;psect for function _ADC_Initialize
  2601                           
  2602     016E                     l894:	
  2603                           ;incstack = 0
  2604                           ; Regs used in _ADC_Initialize: [status,2]
  2605                           
  2606                           
  2607                           ;mcc_generated_files/adc.c: 72:     ADCON1 = 0xC3;
  2608     016E  30C3               	movlw	195
  2609     016F  0021               	movlb	1	; select bank1
  2610     0170  009E               	movwf	30	;volatile
  2611     0171                     l896:
  2612                           
  2613                           ;mcc_generated_files/adc.c: 75:     ADRESL = 0x00;
  2614     0171  019B               	clrf	27	;volatile
  2615                           
  2616                           ;mcc_generated_files/adc.c: 78:     ADRESH = 0x00;
  2617     0172  019C               	clrf	28	;volatile
  2618     0173                     l898:
  2619                           
  2620                           ;mcc_generated_files/adc.c: 81:     ADCON0 = 0x05;
  2621     0173  3005               	movlw	5
  2622     0174  009D               	movwf	29	;volatile
  2623     0175                     l120:
  2624     0175  0008               	return
  2625     0176                     __end_of_ADC_Initialize:
  2626                           
  2627                           	psect	text11
  2628     00CC                     __ptext11:	
  2629 ;; *************** function _EPWM2_LoadDutyValue *****************
  2630 ;; Defined at:
  2631 ;;		line 90 in file "mcc_generated_files/epwm2.c"
  2632 ;; Parameters:    Size  Location     Type
  2633 ;;  dutyValue       2    2[COMMON] unsigned short 
  2634 ;; Auto vars:     Size  Location     Type
  2635 ;;		None
  2636 ;; Return value:  Size  Location     Type
  2637 ;;                  1    wreg      void 
  2638 ;; Registers used:
  2639 ;;		wreg, status,2, status,0
  2640 ;; Tracked objects:
  2641 ;;		On entry : 0/0
  2642 ;;		On exit  : 0/0
  2643 ;;		Unchanged: 0/0
  2644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2645 ;;      Params:         2       0       0       0       0       0
  2646 ;;      Locals:         0       0       0       0       0       0
  2647 ;;      Temps:          0       2       0       0       0       0
  2648 ;;      Totals:         2       2       0       0       0       0
  2649 ;;Total ram usage:        4 bytes
  2650 ;; Hardware stack levels used: 1
  2651 ;; Hardware stack levels required when called: 3
  2652 ;; This function calls:
  2653 ;;		Nothing
  2654 ;; This function is called by:
  2655 ;;		_main
  2656 ;; This function uses a non-reentrant model
  2657 ;;
  2658                           
  2659     00CC                     _EPWM2_LoadDutyValue:	
  2660                           ;psect for function _EPWM2_LoadDutyValue
  2661                           
  2662     00CC                     l1150:	
  2663                           ;incstack = 0
  2664                           ; Regs used in _EPWM2_LoadDutyValue: [wreg+status,2+status,0]
  2665                           
  2666                           
  2667                           ;mcc_generated_files/epwm2.c: 90: void EPWM2_LoadDutyValue(uint16_t dutyValue);mcc_gener
      +                          ated_files/epwm2.c: 91: {;mcc_generated_files/epwm2.c: 93:     CCPR2L = ((dutyValue & 0x
      +                          03FC)>>2);
  2668     00CC  0879               	movf	EPWM2_LoadDutyValue@dutyValue+1,w
  2669     00CD  0020               	movlb	0	; select bank0
  2670     00CE  00A3               	movwf	??_EPWM2_LoadDutyValue+1
  2671     00CF  0878               	movf	EPWM2_LoadDutyValue@dutyValue,w
  2672     00D0  00A2               	movwf	??_EPWM2_LoadDutyValue
  2673     00D1  36A3               	lsrf	??_EPWM2_LoadDutyValue+1,f
  2674     00D2  0CA2               	rrf	??_EPWM2_LoadDutyValue,f
  2675     00D3  36A3               	lsrf	??_EPWM2_LoadDutyValue+1,f
  2676     00D4  0CA2               	rrf	??_EPWM2_LoadDutyValue,f
  2677     00D5  0822               	movf	??_EPWM2_LoadDutyValue,w
  2678     00D6  0025               	movlb	5	; select bank5
  2679     00D7  0098               	movwf	24	;volatile
  2680                           
  2681                           ;mcc_generated_files/epwm2.c: 96:     CCP2CON = ((uint8_t)(CCP2CON & 0xCF) | ((dutyValue
      +                           & 0x0003)<<4));
  2682     00D8  0878               	movf	EPWM2_LoadDutyValue@dutyValue,w
  2683     00D9  3903               	andlw	3
  2684     00DA  0020               	movlb	0	; select bank0
  2685     00DB  00A2               	movwf	??_EPWM2_LoadDutyValue
  2686     00DC  3004               	movlw	4
  2687     00DD                     u335:
  2688     00DD  35A2               	lslf	??_EPWM2_LoadDutyValue,f
  2689     00DE  0B89               	decfsz	9,f
  2690     00DF  28DD               	goto	u335
  2691     00E0  0025               	movlb	5	; select bank5
  2692     00E1  081A               	movf	26,w	;volatile
  2693     00E2  39CF               	andlw	207
  2694     00E3  0020               	movlb	0	; select bank0
  2695     00E4  0422               	iorwf	??_EPWM2_LoadDutyValue,w
  2696     00E5  0025               	movlb	5	; select bank5
  2697     00E6  009A               	movwf	26	;volatile
  2698     00E7                     l221:
  2699     00E7  0008               	return
  2700     00E8                     __end_of_EPWM2_LoadDutyValue:
  2701                           
  2702                           	psect	text12
  2703     00AF                     __ptext12:	
  2704 ;; *************** function _ADC_GetConversion *****************
  2705 ;; Defined at:
  2706 ;;		line 112 in file "mcc_generated_files/adc.c"
  2707 ;; Parameters:    Size  Location     Type
  2708 ;;  channel         1    wreg     enum E2495
  2709 ;; Auto vars:     Size  Location     Type
  2710 ;;  channel         1    1[BANK0 ] enum E2495
  2711 ;; Return value:  Size  Location     Type
  2712 ;;                  2    2[COMMON] unsigned short 
  2713 ;; Registers used:
  2714 ;;		wreg, status,2, status,0
  2715 ;; Tracked objects:
  2716 ;;		On entry : 0/0
  2717 ;;		On exit  : 0/0
  2718 ;;		Unchanged: 0/0
  2719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2720 ;;      Params:         2       0       0       0       0       0
  2721 ;;      Locals:         0       1       0       0       0       0
  2722 ;;      Temps:          0       1       0       0       0       0
  2723 ;;      Totals:         2       2       0       0       0       0
  2724 ;;Total ram usage:        4 bytes
  2725 ;; Hardware stack levels used: 1
  2726 ;; Hardware stack levels required when called: 3
  2727 ;; This function calls:
  2728 ;;		Nothing
  2729 ;; This function is called by:
  2730 ;;		_main
  2731 ;; This function uses a non-reentrant model
  2732 ;;
  2733                           
  2734     00AF                     _ADC_GetConversion:	
  2735                           ;psect for function _ADC_GetConversion
  2736                           
  2737                           
  2738                           ;incstack = 0
  2739                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
  2740                           ;ADC_GetConversion@channel stored from wreg
  2741     00AF  0020               	movlb	0	; select bank0
  2742     00B0  00A3               	movwf	ADC_GetConversion@channel
  2743     00B1                     l1138:
  2744                           
  2745                           ;mcc_generated_files/adc.c: 112: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 113: {;mcc_generated_files/adc.c: 115:     ADCON0bits.CHS = ch
      +                          annel;
  2746     00B1  0823               	movf	ADC_GetConversion@channel,w
  2747     00B2  00A2               	movwf	??_ADC_GetConversion
  2748     00B3  0DA2               	rlf	??_ADC_GetConversion,f
  2749     00B4  0DA2               	rlf	??_ADC_GetConversion,f
  2750     00B5  0021               	movlb	1	; select bank1
  2751     00B6  081D               	movf	29,w	;volatile
  2752     00B7  0020               	movlb	0	; select bank0
  2753     00B8  0622               	xorwf	??_ADC_GetConversion,w
  2754     00B9  3983               	andlw	-125
  2755     00BA  0622               	xorwf	??_ADC_GetConversion,w
  2756     00BB  0021               	movlb	1	; select bank1
  2757     00BC  009D               	movwf	29	;volatile
  2758     00BD                     l1140:
  2759                           
  2760                           ;mcc_generated_files/adc.c: 118:     ADCON0bits.ADON = 1;
  2761     00BD  141D               	bsf	29,0	;volatile
  2762     00BE                     l1142:
  2763                           
  2764                           ;mcc_generated_files/adc.c: 121:     _delay((unsigned long)((5)*(4000000/4000000.0)));
  2765     00BE  3200               	nop2	;2 cycle nop
  2766     00BF  3200               	nop2	;2 cycle nop
  2767     00C0  0000               	nop
  2768     00C1                     l1144:
  2769                           
  2770                           ;mcc_generated_files/adc.c: 124:     ADCON0bits.GO_nDONE = 1;
  2771     00C1  0021               	movlb	1	; select bank1
  2772     00C2  149D               	bsf	29,1	;volatile
  2773     00C3                     l135:	
  2774                           ;mcc_generated_files/adc.c: 128:     {;mcc_generated_files/adc.c: 129:     }
  2775                           
  2776                           
  2777                           ;mcc_generated_files/adc.c: 127:     while (ADCON0bits.GO_nDONE)
  2778     00C3  189D               	btfsc	29,1	;volatile
  2779     00C4  28C6               	goto	u321
  2780     00C5  28C7               	goto	u320
  2781     00C6                     u321:
  2782     00C6  28C3               	goto	l135
  2783     00C7                     u320:
  2784     00C7                     l1146:
  2785                           
  2786                           ;mcc_generated_files/adc.c: 132:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  2787     00C7  081C               	movf	28,w	;volatile
  2788     00C8  00F9               	movwf	?_ADC_GetConversion+1
  2789     00C9  081B               	movf	27,w	;volatile
  2790     00CA  00F8               	movwf	?_ADC_GetConversion
  2791     00CB                     l138:
  2792     00CB  0008               	return
  2793     00CC                     __end_of_ADC_GetConversion:
  2794                           
  2795                           	psect	intentry
  2796     0004                     __pintentry:	
  2797 ;; *************** function _INTERRUPT_InterruptManager *****************
  2798 ;; Defined at:
  2799 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  2800 ;; Parameters:    Size  Location     Type
  2801 ;;		None
  2802 ;; Auto vars:     Size  Location     Type
  2803 ;;		None
  2804 ;; Return value:  Size  Location     Type
  2805 ;;                  1    wreg      void 
  2806 ;; Registers used:
  2807 ;;		wreg, status,2, status,0, pclath, cstack
  2808 ;; Tracked objects:
  2809 ;;		On entry : 0/0
  2810 ;;		On exit  : 0/0
  2811 ;;		Unchanged: 0/0
  2812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2813 ;;      Params:         0       0       0       0       0       0
  2814 ;;      Locals:         0       0       0       0       0       0
  2815 ;;      Temps:          0       0       0       0       0       0
  2816 ;;      Totals:         0       0       0       0       0       0
  2817 ;;Total ram usage:        0 bytes
  2818 ;; Hardware stack levels used: 1
  2819 ;; Hardware stack levels required when called: 2
  2820 ;; This function calls:
  2821 ;;		_TMR1_ISR
  2822 ;; This function is called by:
  2823 ;;		Interrupt level 1
  2824 ;; This function uses a non-reentrant model
  2825 ;;
  2826                           
  2827     0004                     _INTERRUPT_InterruptManager:
  2828                           
  2829                           ;incstack = 0
  2830     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  2831                           
  2832                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  2833     0005  3180               	pagesel	$
  2834     0006  3000               	movlw	low ___int_sp
  2835     0007  0086               	movwf	6
  2836     0008  3000               	movlw	high ___int_sp
  2837     0009  0087               	movwf	7
  2838     000A                     i1l1124:
  2839                           
  2840                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
  2841     000A  1F0B               	btfss	11,6	;volatile
  2842     000B  280D               	goto	u29_21
  2843     000C  280E               	goto	u29_20
  2844     000D                     u29_21:
  2845     000D  281B               	goto	i1l238
  2846     000E                     u29_20:
  2847     000E                     i1l1126:
  2848                           
  2849                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
  2850     000E  0021               	movlb	1	; select bank1
  2851     000F  1C11               	btfss	17,0	;volatile
  2852     0010  2812               	goto	u30_21
  2853     0011  2813               	goto	u30_20
  2854     0012                     u30_21:
  2855     0012  281B               	goto	i1l238
  2856     0013                     u30_20:
  2857     0013                     i1l1128:
  2858     0013  0020               	movlb	0	; select bank0
  2859     0014  1C11               	btfss	17,0	;volatile
  2860     0015  2817               	goto	u31_21
  2861     0016  2818               	goto	u31_20
  2862     0017                     u31_21:
  2863     0017  281B               	goto	i1l238
  2864     0018                     u31_20:
  2865     0018                     i1l1130:
  2866                           
  2867                           ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 59:             TMR1_ISR();
  2868     0018  3181  2131  3180   	fcall	_TMR1_ISR
  2869     001B                     i1l238:	
  2870                           ;mcc_generated_files/interrupt_manager.c: 60:         }
  2871                           
  2872     001B  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2873     001C  0009               	retfie
  2874     001D                     __end_of_INTERRUPT_InterruptManager:
  2875                           
  2876                           	psect	text14
  2877     0131                     __ptext14:	
  2878 ;; *************** function _TMR1_ISR *****************
  2879 ;; Defined at:
  2880 ;;		line 157 in file "mcc_generated_files/tmr1.c"
  2881 ;; Parameters:    Size  Location     Type
  2882 ;;		None
  2883 ;; Auto vars:     Size  Location     Type
  2884 ;;		None
  2885 ;; Return value:  Size  Location     Type
  2886 ;;                  1    wreg      void 
  2887 ;; Registers used:
  2888 ;;		wreg, status,2, status,0, pclath, cstack
  2889 ;; Tracked objects:
  2890 ;;		On entry : 0/0
  2891 ;;		On exit  : 0/0
  2892 ;;		Unchanged: 0/0
  2893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2894 ;;      Params:         0       0       0       0       0       0
  2895 ;;      Locals:         0       0       0       0       0       0
  2896 ;;      Temps:          0       0       0       0       0       0
  2897 ;;      Totals:         0       0       0       0       0       0
  2898 ;;Total ram usage:        0 bytes
  2899 ;; Hardware stack levels used: 1
  2900 ;; Hardware stack levels required when called: 1
  2901 ;; This function calls:
  2902 ;;		NULL
  2903 ;;		_TMR1_DefaultInterruptHandler
  2904 ;;		_TMR1_WriteTimer
  2905 ;;		_rampDutyCicle
  2906 ;; This function is called by:
  2907 ;;		_INTERRUPT_InterruptManager
  2908 ;; This function uses a non-reentrant model
  2909 ;;
  2910                           
  2911     0131                     _TMR1_ISR:	
  2912                           ;psect for function _TMR1_ISR
  2913                           
  2914     0131                     i1l1090:	
  2915                           ;incstack = 0
  2916                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
  2917                           
  2918                           
  2919                           ;mcc_generated_files/tmr1.c: 161:     PIR1bits.TMR1IF = 0;
  2920     0131  0020               	movlb	0	; select bank0
  2921     0132  1011               	bcf	17,0	;volatile
  2922     0133                     i1l1092:
  2923                           
  2924                           ;mcc_generated_files/tmr1.c: 162:     TMR1_WriteTimer(timer1ReloadVal);
  2925     0133  0875               	movf	_timer1ReloadVal+1,w	;volatile
  2926     0134  00F7               	movwf	TMR1_WriteTimer@timerVal+1
  2927     0135  0874               	movf	_timer1ReloadVal,w	;volatile
  2928     0136  00F6               	movwf	TMR1_WriteTimer@timerVal
  2929     0137  3181  2147  3181   	fcall	_TMR1_WriteTimer
  2930     013A                     i1l1094:
  2931                           
  2932                           ;mcc_generated_files/tmr1.c: 164:     if(TMR1_InterruptHandler)
  2933     013A  0020               	movlb	0	; select bank0
  2934     013B  0820               	movf	_TMR1_InterruptHandler,w
  2935     013C  0421               	iorwf	_TMR1_InterruptHandler+1,w
  2936     013D  1903               	btfsc	3,2
  2937     013E  2940               	goto	u26_21
  2938     013F  2941               	goto	u26_20
  2939     0140                     u26_21:
  2940     0140  2946               	goto	i1l64
  2941     0141                     u26_20:
  2942     0141                     i1l1096:
  2943                           
  2944                           ;mcc_generated_files/tmr1.c: 165:     {;mcc_generated_files/tmr1.c: 166:         TMR1_In
      +                          terruptHandler();
  2945     0141  0821               	movf	_TMR1_InterruptHandler+1,w
  2946     0142  008A               	movwf	10
  2947     0143  0820               	movf	_TMR1_InterruptHandler,w
  2948     0144  000A               	callw
  2949     0145  3181               	pagesel	$
  2950     0146                     i1l64:
  2951     0146  0008               	return
  2952     0147                     __end_of_TMR1_ISR:
  2953                           
  2954                           	psect	text15
  2955     018B                     __ptext15:	
  2956 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  2957 ;; Defined at:
  2958 ;;		line 175 in file "mcc_generated_files/tmr1.c"
  2959 ;; Parameters:    Size  Location     Type
  2960 ;;		None
  2961 ;; Auto vars:     Size  Location     Type
  2962 ;;		None
  2963 ;; Return value:  Size  Location     Type
  2964 ;;                  1    wreg      void 
  2965 ;; Registers used:
  2966 ;;		None
  2967 ;; Tracked objects:
  2968 ;;		On entry : 0/0
  2969 ;;		On exit  : 0/0
  2970 ;;		Unchanged: 0/0
  2971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2972 ;;      Params:         0       0       0       0       0       0
  2973 ;;      Locals:         0       0       0       0       0       0
  2974 ;;      Temps:          0       0       0       0       0       0
  2975 ;;      Totals:         0       0       0       0       0       0
  2976 ;;Total ram usage:        0 bytes
  2977 ;; Hardware stack levels used: 1
  2978 ;; This function calls:
  2979 ;;		Nothing
  2980 ;; This function is called by:
  2981 ;;		_TMR1_Initialize
  2982 ;;		_TMR1_ISR
  2983 ;; This function uses a non-reentrant model
  2984 ;;
  2985                           
  2986     018B                     _TMR1_DefaultInterruptHandler:	
  2987                           ;psect for function _TMR1_DefaultInterruptHandler
  2988                           
  2989     018B                     i1l70:	
  2990                           ;incstack = 0
  2991                           ; Regs used in _TMR1_DefaultInterruptHandler: []
  2992                           
  2993     018B  0008               	return
  2994     018C                     __end_of_TMR1_DefaultInterruptHandler:
  2995                           
  2996                           	psect	text16
  2997     0029                     __ptext16:	
  2998 ;; *************** function _rampDutyCicle *****************
  2999 ;; Defined at:
  3000 ;;		line 49 in file "main.c"
  3001 ;; Parameters:    Size  Location     Type
  3002 ;;		None
  3003 ;; Auto vars:     Size  Location     Type
  3004 ;;  dif             2    0[COMMON] unsigned short 
  3005 ;; Return value:  Size  Location     Type
  3006 ;;                  1    wreg      void 
  3007 ;; Registers used:
  3008 ;;		wreg, status,2, status,0
  3009 ;; Tracked objects:
  3010 ;;		On entry : 0/0
  3011 ;;		On exit  : 0/0
  3012 ;;		Unchanged: 0/0
  3013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3014 ;;      Params:         0       0       0       0       0       0
  3015 ;;      Locals:         2       0       0       0       0       0
  3016 ;;      Temps:          0       0       0       0       0       0
  3017 ;;      Totals:         2       0       0       0       0       0
  3018 ;;Total ram usage:        2 bytes
  3019 ;; Hardware stack levels used: 1
  3020 ;; This function calls:
  3021 ;;		Nothing
  3022 ;; This function is called by:
  3023 ;;		_main
  3024 ;;		_TMR1_ISR
  3025 ;; This function uses a non-reentrant model
  3026 ;;
  3027                           
  3028     0029                     _rampDutyCicle:	
  3029                           ;psect for function _rampDutyCicle
  3030                           
  3031     0029                     i1l1064:	
  3032                           ;incstack = 0
  3033                           ; Regs used in _rampDutyCicle: [wreg+status,2+status,0]
  3034                           
  3035                           
  3036                           ;main.c: 50:     uint16_t dif = dutyCicle - currentDuty;
  3037     0029  0870               	movf	_currentDuty,w
  3038     002A  027A               	subwf	_dutyCicle,w
  3039     002B  00F6               	movwf	rampDutyCicle@dif
  3040     002C  0871               	movf	_currentDuty+1,w
  3041     002D  3B7B               	subwfb	_dutyCicle+1,w
  3042     002E  00F7               	movwf	rampDutyCicle@dif+1
  3043     002F                     i1l1066:
  3044                           
  3045                           ;main.c: 52:     if (dif >= 2 && dutyCicle > currentDuty) {
  3046     002F  3000               	movlw	0
  3047     0030  0277               	subwf	rampDutyCicle@dif+1,w
  3048     0031  3002               	movlw	2
  3049     0032  1903               	skipnz
  3050     0033  0276               	subwf	rampDutyCicle@dif,w
  3051     0034  1C03               	skipc
  3052     0035  2837               	goto	u18_21
  3053     0036  2838               	goto	u18_20
  3054     0037                     u18_21:
  3055     0037  2847               	goto	i1l1072
  3056     0038                     u18_20:
  3057     0038                     i1l1068:
  3058     0038  087B               	movf	_dutyCicle+1,w
  3059     0039  0271               	subwf	_currentDuty+1,w
  3060     003A  1D03               	skipz
  3061     003B  283E               	goto	u19_25
  3062     003C  087A               	movf	_dutyCicle,w
  3063     003D  0270               	subwf	_currentDuty,w
  3064     003E                     u19_25:
  3065     003E  1803               	skipnc
  3066     003F  2841               	goto	u19_21
  3067     0040  2842               	goto	u19_20
  3068     0041                     u19_21:
  3069     0041  2847               	goto	i1l1072
  3070     0042                     u19_20:
  3071     0042                     i1l1070:
  3072                           
  3073                           ;main.c: 53:         currentDuty += 2;
  3074     0042  3002               	movlw	2
  3075     0043  07F0               	addwf	_currentDuty,f
  3076     0044  3000               	movlw	0
  3077     0045  3DF1               	addwfc	_currentDuty+1,f
  3078                           
  3079                           ;main.c: 54:     } else if (dif == 1 && dutyCicle > currentDuty){
  3080     0046  2888               	goto	i1l262
  3081     0047                     i1l1072:
  3082     0047  0376               	decf	rampDutyCicle@dif,w
  3083     0048  0477               	iorwf	rampDutyCicle@dif+1,w
  3084     0049  1D03               	btfss	3,2
  3085     004A  284C               	goto	u20_21
  3086     004B  284D               	goto	u20_20
  3087     004C                     u20_21:
  3088     004C  285C               	goto	i1l1078
  3089     004D                     u20_20:
  3090     004D                     i1l1074:
  3091     004D  087B               	movf	_dutyCicle+1,w
  3092     004E  0271               	subwf	_currentDuty+1,w
  3093     004F  1D03               	skipz
  3094     0050  2853               	goto	u21_25
  3095     0051  087A               	movf	_dutyCicle,w
  3096     0052  0270               	subwf	_currentDuty,w
  3097     0053                     u21_25:
  3098     0053  1803               	skipnc
  3099     0054  2856               	goto	u21_21
  3100     0055  2857               	goto	u21_20
  3101     0056                     u21_21:
  3102     0056  285C               	goto	i1l1078
  3103     0057                     u21_20:
  3104     0057                     i1l1076:
  3105                           
  3106                           ;main.c: 55:         currentDuty++;
  3107     0057  3001               	movlw	1
  3108     0058  07F0               	addwf	_currentDuty,f
  3109     0059  3000               	movlw	0
  3110     005A  3DF1               	addwfc	_currentDuty+1,f
  3111                           
  3112                           ;main.c: 56:     } else if (dif >=2 && dutyCicle < currentDuty){
  3113     005B  2888               	goto	i1l262
  3114     005C                     i1l1078:
  3115     005C  3000               	movlw	0
  3116     005D  0277               	subwf	rampDutyCicle@dif+1,w
  3117     005E  3002               	movlw	2
  3118     005F  1903               	skipnz
  3119     0060  0276               	subwf	rampDutyCicle@dif,w
  3120     0061  1C03               	skipc
  3121     0062  2864               	goto	u22_21
  3122     0063  2865               	goto	u22_20
  3123     0064                     u22_21:
  3124     0064  2874               	goto	i1l1084
  3125     0065                     u22_20:
  3126     0065                     i1l1080:
  3127     0065  0871               	movf	_currentDuty+1,w
  3128     0066  027B               	subwf	_dutyCicle+1,w
  3129     0067  1D03               	skipz
  3130     0068  286B               	goto	u23_25
  3131     0069  0870               	movf	_currentDuty,w
  3132     006A  027A               	subwf	_dutyCicle,w
  3133     006B                     u23_25:
  3134     006B  1803               	skipnc
  3135     006C  286E               	goto	u23_21
  3136     006D  286F               	goto	u23_20
  3137     006E                     u23_21:
  3138     006E  2874               	goto	i1l1084
  3139     006F                     u23_20:
  3140     006F                     i1l1082:
  3141                           
  3142                           ;main.c: 57:         currentDuty -= 2;
  3143     006F  3002               	movlw	2
  3144     0070  02F0               	subwf	_currentDuty,f
  3145     0071  3000               	movlw	0
  3146     0072  3BF1               	subwfb	_currentDuty+1,f
  3147                           
  3148                           ;main.c: 58:     } else if (dif == 1 && dutyCicle < currentDuty){
  3149     0073  2888               	goto	i1l262
  3150     0074                     i1l1084:
  3151     0074  0376               	decf	rampDutyCicle@dif,w
  3152     0075  0477               	iorwf	rampDutyCicle@dif+1,w
  3153     0076  1D03               	btfss	3,2
  3154     0077  2879               	goto	u24_21
  3155     0078  287A               	goto	u24_20
  3156     0079                     u24_21:
  3157     0079  2888               	goto	i1l262
  3158     007A                     u24_20:
  3159     007A                     i1l1086:
  3160     007A  0871               	movf	_currentDuty+1,w
  3161     007B  027B               	subwf	_dutyCicle+1,w
  3162     007C  1D03               	skipz
  3163     007D  2880               	goto	u25_25
  3164     007E  0870               	movf	_currentDuty,w
  3165     007F  027A               	subwf	_dutyCicle,w
  3166     0080                     u25_25:
  3167     0080  1803               	skipnc
  3168     0081  2883               	goto	u25_21
  3169     0082  2884               	goto	u25_20
  3170     0083                     u25_21:
  3171     0083  2888               	goto	i1l262
  3172     0084                     u25_20:
  3173     0084                     i1l1088:
  3174                           
  3175                           ;main.c: 59:         currentDuty--;
  3176     0084  3001               	movlw	1
  3177     0085  02F0               	subwf	_currentDuty,f
  3178     0086  3000               	movlw	0
  3179     0087  3BF1               	subwfb	_currentDuty+1,f
  3180     0088                     i1l262:
  3181     0088  0008               	return
  3182     0089                     __end_of_rampDutyCicle:
  3183                           
  3184                           	psect	text17
  3185     0147                     __ptext17:	
  3186 ;; *************** function _TMR1_WriteTimer *****************
  3187 ;; Defined at:
  3188 ;;		line 120 in file "mcc_generated_files/tmr1.c"
  3189 ;; Parameters:    Size  Location     Type
  3190 ;;  timerVal        2    0[COMMON] unsigned short 
  3191 ;; Auto vars:     Size  Location     Type
  3192 ;;		None
  3193 ;; Return value:  Size  Location     Type
  3194 ;;                  1    wreg      void 
  3195 ;; Registers used:
  3196 ;;		wreg, status,2
  3197 ;; Tracked objects:
  3198 ;;		On entry : 0/0
  3199 ;;		On exit  : 0/0
  3200 ;;		Unchanged: 0/0
  3201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3202 ;;      Params:         2       0       0       0       0       0
  3203 ;;      Locals:         0       0       0       0       0       0
  3204 ;;      Temps:          0       0       0       0       0       0
  3205 ;;      Totals:         2       0       0       0       0       0
  3206 ;;Total ram usage:        2 bytes
  3207 ;; Hardware stack levels used: 1
  3208 ;; This function calls:
  3209 ;;		Nothing
  3210 ;; This function is called by:
  3211 ;;		_TMR1_ISR
  3212 ;;		_TMR1_Reload
  3213 ;; This function uses a non-reentrant model
  3214 ;;
  3215                           
  3216     0147                     _TMR1_WriteTimer:	
  3217                           ;psect for function _TMR1_WriteTimer
  3218                           
  3219     0147                     i1l1050:	
  3220                           ;incstack = 0
  3221                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
  3222                           
  3223                           
  3224                           ;mcc_generated_files/tmr1.c: 120: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 121: {;mcc_generated_files/tmr1.c: 122:     if (T1CONbits.nT1SYNC == 1)
  3225     0147  0020               	movlb	0	; select bank0
  3226     0148  1D18               	btfss	24,2	;volatile
  3227     0149  294B               	goto	u17_21
  3228     014A  294C               	goto	u17_20
  3229     014B                     u17_21:
  3230     014B  2953               	goto	i1l1060
  3231     014C                     u17_20:
  3232     014C                     i1l1052:
  3233                           
  3234                           ;mcc_generated_files/tmr1.c: 123:     {;mcc_generated_files/tmr1.c: 125:         T1CONbi
      +                          ts.TMR1ON = 0;
  3235     014C  1018               	bcf	24,0	;volatile
  3236     014D                     i1l1054:
  3237                           
  3238                           ;mcc_generated_files/tmr1.c: 128:         TMR1H = (uint8_t)(timerVal >> 8);
  3239     014D  0877               	movf	TMR1_WriteTimer@timerVal+1,w
  3240     014E  0097               	movwf	23	;volatile
  3241     014F                     i1l1056:
  3242                           
  3243                           ;mcc_generated_files/tmr1.c: 129:         TMR1L = (uint8_t)timerVal;
  3244     014F  0876               	movf	TMR1_WriteTimer@timerVal,w
  3245     0150  0096               	movwf	22	;volatile
  3246     0151                     i1l1058:
  3247                           
  3248                           ;mcc_generated_files/tmr1.c: 132:         T1CONbits.TMR1ON =1;
  3249     0151  1418               	bsf	24,0	;volatile
  3250                           
  3251                           ;mcc_generated_files/tmr1.c: 133:     }
  3252     0152  2957               	goto	i1l51
  3253     0153                     i1l1060:
  3254                           
  3255                           ;mcc_generated_files/tmr1.c: 135:     {;mcc_generated_files/tmr1.c: 137:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
  3256     0153  0877               	movf	TMR1_WriteTimer@timerVal+1,w
  3257     0154  0097               	movwf	23	;volatile
  3258     0155                     i1l1062:
  3259                           
  3260                           ;mcc_generated_files/tmr1.c: 138:         TMR1L = (uint8_t)timerVal;
  3261     0155  0876               	movf	TMR1_WriteTimer@timerVal,w
  3262     0156  0096               	movwf	22	;volatile
  3263     0157                     i1l51:
  3264     0157  0008               	return
  3265     0158                     __end_of_TMR1_WriteTimer:
  3266     0001                     ___latbits      equ	1
  3267     007E                     btemp           set	126	;btemp
  3268     007E                     int$flags       set	126
  3269     007E                     btemp0          set	126
  3270     007F                     btemp1          set	127
  3271     007E                     wtemp0          set	126
  3272     007F                     wtemp0a         set	127
  3273     007F                     ttemp0a         set	127
  3274     0080                     ltemp0a         set	128
  3275                           
  3276                           	psect	config
  3277                           
  3278                           ;Config register CONFIG1 @ 0x8007
  3279                           ;	Oscillator Selection
  3280                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  3281                           ;	Watchdog Timer Enable
  3282                           ;	WDTE = OFF, WDT disabled
  3283                           ;	Power-up Timer Enable
  3284                           ;	PWRTE = OFF, PWRT disabled
  3285                           ;	MCLR Pin Function Select
  3286                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  3287                           ;	Flash Program Memory Code Protection
  3288                           ;	CP = OFF, Program memory code protection is disabled
  3289                           ;	Data Memory Code Protection
  3290                           ;	CPD = OFF, Data memory code protection is disabled
  3291                           ;	Brown-out Reset Enable
  3292                           ;	BOREN = ON, Brown-out Reset enabled
  3293                           ;	Clock Out Enable
  3294                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  3295                           ;	Internal/External Switchover
  3296                           ;	IESO = ON, Internal/External Switchover mode is enabled
  3297                           ;	Fail-Safe Clock Monitor Enable
  3298                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  3299     8007                     	org	32775
  3300     8007  3FE4               	dw	16356
  3301                           
  3302                           ;Config register CONFIG2 @ 0x8008
  3303                           ;	Flash Memory Self-Write Protection
  3304                           ;	WRT = OFF, Write protection off
  3305                           ;	PLL Enable
  3306                           ;	PLLEN = OFF, 4x PLL disabled
  3307                           ;	Stack Overflow/Underflow Reset Enable
  3308                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  3309                           ;	Brown-out Reset Voltage Selection
  3310                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  3311                           ;	In-Circuit Debugger Mode
  3312                           ;	DEBUG = 0x1, unprogrammed default
  3313                           ;	Low-Voltage Programming Enable
  3314                           ;	LVP = ON, Low-voltage programming enabled
  3315     8008                     	org	32776
  3316     8008  3EFF               	dw	16127

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         6
    Persistent  52
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4      12
    BANK0            80      2       4
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> rampDutyCicle(), TMR1_DefaultInterruptHandler(), NULL(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> rampDutyCicle(), TMR1_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    _main->_ADC_GetConversion
    _main->_EPWM2_LoadDutyValue
    _main->_TMR1_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR1_ISR->_TMR1_WriteTimer
    _TMR1_ISR->_rampDutyCicle

Critical Paths under _main in BANK0

    _main->_ADC_GetConversion
    _main->_EPWM2_LoadDutyValue

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     160
                  _ADC_GetConversion
                _EPWM2_LoadDutyValue
                  _SYSTEM_Initialize
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      24
                     _ADC_Initialize
                   _EPWM2_Initialize
                     _FVR_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0      24
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2      24
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EPWM2_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EPWM2_LoadDutyValue                                  4     2      2      65
                                              2 COMMON     2     0      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion                                    4     2      2      47
                                              2 COMMON     2     0      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0     179
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR1_ISR                                             0     0      0     179
                                NULL *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
                      _rampDutyCicle *
 ---------------------------------------------------------------------------------
 (6) _rampDutyCicle                                        2     2      0      89
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (6) _TMR1_WriteTimer                                      2     0      2      90
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion
   _EPWM2_LoadDutyValue
   _SYSTEM_Initialize
     _ADC_Initialize
     _EPWM2_Initialize
     _FVR_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
     _WDT_Initialize
   _TMR1_SetInterruptHandler

 _INTERRUPT_InterruptManager (ROOT)
   _TMR1_ISR
     NULL(Fake) *
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *
     _rampDutyCicle *

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK2            80      0       0      0.0%
BITBANK3            80      0       0      0.0%
BITBANK4            48      0       0      0.0%
BIGRAM             368      0       0      0.0%
COMMON              14      4      12     85.7%
BANK0               80      2       4      5.0%
BANK1               80      0       0      0.0%
BANK2               80      0       0      0.0%
BANK3               80      0       0      0.0%
BANK4               48      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      16      0.0%


Microchip Technology PIC Macro Assembler V3.10 build 20250813170317 
Symbol Table                                                                                   Mon Oct 13 08:48:56 2025

                        rampDutyCicle@dif 0076                                         l7 018A  
                                      l37 0118                                        l67 0182  
                                      l97 0100                    __end_of_FVR_Initialize 018B  
                                     l100 017C                                       l103 0186  
                                     l120 0175                                       l221 00E7  
                                     l135 00C3                                       l138 00CB  
                                     l218 0165                                       l154 016D  
                                     l267 009D                                       l198 0130  
                                     l900 0166                                       l902 0169  
                                     l904 016A                                       l906 016B  
                                     l828 0187                                       l860 0119  
                                     l870 0126                                       l862 011C  
                                     l872 012A                                       l864 011F  
                                     l880 0183                                       l890 0161  
                                     l882 0158                                       l874 012C  
                                     l866 0121                                       l892 0163  
                                     l884 015B                                       l876 0176  
                                     l868 0124                                       l894 016E  
                                     l886 015C                                       l878 0179  
                                     l896 0171                                       l888 015E  
                                     l898 0173                                       u320 00C7  
                                     u321 00C6                                       _PR2 001B  
                                     u335 00DD                           _timer1ReloadVal 0074  
                         _TMR2_Initialize 0166                                       wreg 0009  
                __end_of_EPWM2_Initialize 0166                                      l1100 00F4  
                                    l1102 00F7                                      l1032 017D  
                                    l1040 0107                                      l1104 00FA  
                                    l1042 0108                                      l1034 0101  
                                    l1106 00FD                                      l1140 00BD  
                                    l1044 010C                                      l1036 0103  
                                    l1142 00BE                                      l1150 00CC  
                                    l1046 010E                                      l1038 0105  
                                    l1144 00C1                                      l1048 0115  
                                    l1152 0089                                      l1146 00C7  
                                    l1138 00B1                                      l1154 009B  
                                    l1156 009C                                      l1098 00E8  
                                    _LATA 010C                                      _LATB 010D  
                                    i1l51 0157                                      i1l70 018B  
                                    i1l64 0146                                      _TMR2 001A  
                                    _WPUA 020C                                      _WPUB 020D  
                                    _main 0089                                      fsr1h 0007  
                                    fsr1l 0006                                      btemp 007E  
                                    start 001D                ??_TMR1_SetInterruptHandler 007A  
                         ?_FVR_Initialize 0076             __end_of_OSCILLATOR_Initialize 017D  
                                   ?_main 0076                                     _T1CON 0018  
                                   _T2CON 001C                                     i1l262 0088  
                                   i1l238 001B                                     u20_20 004D  
                                   u20_21 004C                                     u21_20 0057  
                                   u21_21 0056                                     u21_25 0053  
                                   u22_20 0065                                     u30_20 0013  
                                   u22_21 0064                                     u30_21 0012  
                                   u23_20 006F                                     u31_20 0018  
                                   u23_21 006E                                     u31_21 0017  
                                   u23_25 006B                                     u24_20 007A  
                                   u24_21 0079                                     u17_20 014C  
                                   u25_20 0084                                     u17_21 014B  
                                   u25_21 0083                                     _TMR1H 0017  
                                   u25_25 0080                                     _TMR1L 0016  
                                   u18_20 0038                                     u26_20 0141  
                                   u18_21 0037                                     u26_21 0140  
                                   u19_20 0042                                     u19_21 0041  
                                   u19_25 003E                                     u29_20 000E  
                                   u29_21 000D                                     _TRISA 008C  
                                   _TRISB 008D                          __end_of_TMR1_ISR 0147  
                          _WDT_Initialize 0183                                     btemp0 007E  
                                   btemp1 007F                   __end_of_TMR1_Initialize 0119  
                                   pclath 000A                                     status 0003  
                                   wtemp0 007E                           _TMR1_WriteTimer 0147  
                         __initialization 001F                              __end_of_main 00AF  
                 __end_of_TMR2_Initialize 016E               ?_INTERRUPT_InterruptManager 0076  
                                  ??_main 007A                    __end_of_WDT_Initialize 0187  
                                  _ADCON0 009D                                    _ADCON1 009E  
                                  _ADRESH 009C                                    _ADRESL 009B  
                                  _CCPR2H 0299                                    _CCPR2L 0298  
                                  _ANSELA 018C                                    _ANSELB 018D  
                                  _BORCON 0116                                    _T1GCON 0019  
                                  i1l1050 0147                                    i1l1130 0018  
                 TMR1_WriteTimer@timerVal 0076                                    i1l1052 014C  
                                  i1l1060 0153                                    i1l1124 000A  
                                  i1l1062 0155                                    i1l1054 014D  
                                  i1l1070 0042                                    i1l1126 000E  
                                  i1l1056 014F                                    i1l1080 0065  
                                  i1l1072 0047                                    i1l1064 0029  
                                  i1l1128 0013                                    i1l1058 0151  
                                  i1l1082 006F                                    i1l1074 004D  
                                  i1l1066 002F                                    i1l1090 0131  
                                  i1l1084 0074                                    i1l1076 0057  
                                  i1l1068 0038                                    i1l1092 0133  
                                  i1l1086 007A                                    i1l1078 005C  
                                  i1l1094 013A                                    i1l1088 0084  
                                  i1l1096 0141                                    _FVRCON 0117  
                                  _OSCCON 0099                                    _WDTCON 0097  
    __end_of_TMR1_DefaultInterruptHandler 018C              _TMR1_DefaultInterruptHandler 018B  
                            _CCPTMRS0bits 029E                                    ltemp0a 0080  
                         ?_WDT_Initialize 0076                  ADC_GetConversion@channel 0023  
                                  ttemp0a 007F                       _EPWM2_LoadDutyValue 00CC  
TMR1_SetInterruptHandler@InterruptHandler 0078                                    wtemp0a 007F  
                 __end_of_TMR1_WriteTimer 0158                          ?_TMR1_Initialize 0076  
                       _SYSTEM_Initialize 00E8                   __end_of__initialization 0025  
                      ?_SYSTEM_Initialize 0076                            __pcstackCOMMON 0076  
                    ?_EPWM2_LoadDutyValue 0078                       ??_SYSTEM_Initialize 007A  
                               ?_TMR1_ISR 0076             ?_TMR1_DefaultInterruptHandler 0076  
                        ?_TMR2_Initialize 0076                            _OPTION_REGbits 0095  
                       ?_EPWM2_Initialize 0076                 __end_of_SYSTEM_Initialize 0101  
                      ??_EPWM2_Initialize 0078                                __pnvCOMMON 007A  
                        ??_FVR_Initialize 0078                                __pmaintext 0089  
                   ??_EPWM2_LoadDutyValue 0022                                ??_TMR1_ISR 0078  
                              __pintentry 0004                                   _CCP2CON 029A  
                                 _ECCP2AS 029C                                   _APFCON0 011D  
                                 _APFCON1 011E                                   _OSCTUNE 0098  
                                 _PWM2CON 029B                          ?_TMR1_WriteTimer 0076  
                    _ADC_InterruptHandler 0072                                   __ptext1 00E8  
                                 __ptext2 0183                                   __ptext3 0166  
                                 __ptext4 0101                                   __ptext5 017D  
                                 __ptext6 0119                                   __ptext7 0176  
                                 __ptext8 0187                                   __ptext9 0158  
          ??_TMR1_DefaultInterruptHandler 0076                                 _T1CONbits 0018  
                   _OSCILLATOR_Initialize 0176                                 _T2CONbits 001C  
                           _rampDutyCicle 0029                  ??_PIN_MANAGER_Initialize 0078  
               ?_TMR1_SetInterruptHandler 0078                      end_of_initialization 0025  
                        ??_WDT_Initialize 0078                            ?_rampDutyCicle 0076  
                          _ADC_Initialize 016E                    ?_OSCILLATOR_Initialize 0076  
                     start_initialization 001F                    __end_of_ADC_Initialize 0176  
                         ??_rampDutyCicle 0076                               __pbssCOMMON 0070  
                               ___latbits 0001                             __pcstackBANK0 0022  
             __end_of_EPWM2_LoadDutyValue 00E8                                 __pnvBANK0 0020  
                  _PIN_MANAGER_Initialize 0119          __end_of_TMR1_SetInterruptHandler 0183  
                         ?_ADC_Initialize 0076              ??_INTERRUPT_InterruptManager 0078  
                               _dutyCicle 007A                                  _PIE1bits 0091  
                                _PIR1bits 0011                                  _TMR1_ISR 0131  
                                _PSTR2CON 029D                         ??_TMR1_Initialize 007A  
                              _ADCON0bits 009D                         ??_TMR2_Initialize 0078  
                        _EPWM2_Initialize 0158                         _ADC_GetConversion 00AF  
                 ??_OSCILLATOR_Initialize 0078                        ?_ADC_GetConversion 0078  
                                ___int_sp 0000                  _TMR1_SetInterruptHandler 017D  
                   _TMR1_InterruptHandler 0020                       ??_ADC_GetConversion 0022  
                             _currentDuty 0070                                  __ptext10 016E  
                                __ptext11 00CC                                  __ptext12 00AF  
                              _T1GCONbits 0019                                  __ptext14 0131  
                                __ptext15 018B                                  __ptext16 0029  
                                __ptext17 0147                 __end_of_ADC_GetConversion 00CC  
                                int$flags 007E        __end_of_INTERRUPT_InterruptManager 001D  
              _INTERRUPT_InterruptManager 0004                         ??_TMR1_WriteTimer 0078  
                              _INTCONbits 000B                                _FVRCONbits 0117  
                                intlevel1 0000              EPWM2_LoadDutyValue@dutyValue 0078  
                 ?_PIN_MANAGER_Initialize 0076                          ??_ADC_Initialize 0078  
                          _FVR_Initialize 0187                     __end_of_rampDutyCicle 0089  
          __end_of_PIN_MANAGER_Initialize 0131                           _TMR1_Initialize 0101  
